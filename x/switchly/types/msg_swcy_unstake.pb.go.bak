// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/msg_swcy_unstake.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	common "github.com/switchlyprotocol/switchlynode/v3/common"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSWCYUnstake struct {
	Signer      github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=signer,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"signer,omitempty"`
	Tx          common.Tx                                     `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx"`
	BasisPoints cosmossdk_io_math.Uint                        `protobuf:"bytes,3,opt,name=basis_points,json=basisPoints,proto3,customtype=cosmossdk.io/math.Uint" json:"basis_points"`
}

func (m *MsgSWCYUnstake) Reset()         { *m = MsgSWCYUnstake{} }
func (m *MsgSWCYUnstake) String() string { return proto.CompactTextString(m) }
func (*MsgSWCYUnstake) ProtoMessage()    {}
func (*MsgSWCYUnstake) Descriptor() ([]byte, []int) {
	return fileDescriptor_da4b99c5bd96b59b, []int{0}
}
func (m *MsgSWCYUnstake) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSWCYUnstake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSWCYUnstake.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSWCYUnstake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSWCYUnstake.Merge(m, src)
}
func (m *MsgSWCYUnstake) XXX_Size() int {
	return m.Size()
}
func (m *MsgSWCYUnstake) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSWCYUnstake.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSWCYUnstake proto.InternalMessageInfo

func (m *MsgSWCYUnstake) GetSigner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Signer
	}
	return nil
}

func (m *MsgSWCYUnstake) GetTx() common.Tx {
	if m != nil {
		return m.Tx
	}
	return common.Tx{}
}

func init() {
	proto.RegisterType((*MsgSWCYUnstake)(nil), "types.MsgSWCYUnstake")
}

func init() { proto.RegisterFile("types/msg_swcy_unstake.proto", fileDescriptor_da4b99c5bd96b59b) }

var fileDescriptor_da4b99c5bd96b59b = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xb1, 0x4e, 0x3a, 0x41,
	0x10, 0xc6, 0x6f, 0xf9, 0xff, 0x25, 0xf1, 0x20, 0x26, 0x9e, 0xc6, 0x10, 0x62, 0x96, 0x8b, 0x15,
	0x0d, 0xb7, 0x51, 0x5a, 0x1b, 0xce, 0xca, 0xc2, 0xc4, 0xa0, 0x68, 0xb4, 0x21, 0xc7, 0xde, 0x65,
	0xd9, 0xc0, 0xee, 0x10, 0x66, 0x91, 0xe3, 0x2d, 0x7c, 0x24, 0x4b, 0x4a, 0x4a, 0x63, 0x41, 0x0c,
	0xbc, 0x85, 0x95, 0x61, 0xf7, 0x42, 0x6c, 0x76, 0x26, 0xbf, 0x6f, 0x67, 0xe6, 0xfb, 0xfc, 0x73,
	0xb3, 0x98, 0x64, 0xc8, 0x14, 0x8a, 0x3e, 0xce, 0xf9, 0xa2, 0x3f, 0xd3, 0x68, 0x92, 0x51, 0x16,
	0x4d, 0xa6, 0x60, 0x20, 0x38, 0xb0, 0x6a, 0xfd, 0x84, 0x83, 0x52, 0xa0, 0x99, 0x2b, 0x4e, 0xab,
	0x9f, 0x0a, 0x10, 0x60, 0x5b, 0xb6, 0xeb, 0x0a, 0x7a, 0x9c, 0x28, 0xa9, 0x81, 0xd9, 0xd7, 0xa1,
	0x8b, 0x0f, 0xe2, 0x1f, 0xdd, 0xa1, 0x78, 0x78, 0xbe, 0x79, 0xe9, 0xb9, 0xed, 0xc1, 0xad, 0x5f,
	0x46, 0x29, 0x74, 0x36, 0xad, 0x91, 0x90, 0x34, 0xab, 0xf1, 0xe5, 0xcf, 0xba, 0xd1, 0x12, 0xd2,
	0x0c, 0x67, 0x83, 0x88, 0x83, 0x62, 0x1c, 0x50, 0x01, 0x16, 0xa5, 0x85, 0xe9, 0x88, 0x59, 0x23,
	0x51, 0x87, 0xf3, 0x4e, 0x9a, 0x4e, 0x33, 0xc4, 0x6e, 0xb1, 0x20, 0x08, 0xfd, 0x92, 0xc9, 0x6b,
	0xa5, 0x90, 0x34, 0x2b, 0x57, 0x7e, 0x54, 0x38, 0x7c, 0xcc, 0xe3, 0xff, 0xcb, 0x75, 0xc3, 0xeb,
	0x96, 0x4c, 0x1e, 0x74, 0xfc, 0xea, 0x20, 0x41, 0x89, 0xfd, 0x09, 0x48, 0x6d, 0xb0, 0xf6, 0x2f,
	0x24, 0xcd, 0xc3, 0x98, 0xee, 0xf4, 0xaf, 0x75, 0xe3, 0xcc, 0x1d, 0xc1, 0x74, 0x14, 0x49, 0x60,
	0x2a, 0x31, 0xc3, 0xa8, 0x27, 0xb5, 0xe9, 0x56, 0xec, 0xcc, 0xbd, 0x1d, 0x89, 0x9f, 0x96, 0x1b,
	0x4a, 0x56, 0x1b, 0x4a, 0xbe, 0x37, 0x94, 0xbc, 0x6f, 0xa9, 0xb7, 0xda, 0x52, 0xef, 0x73, 0x4b,
	0xbd, 0xd7, 0xeb, 0x3f, 0xae, 0x71, 0x2e, 0x0d, 0x1f, 0x8e, 0x17, 0x36, 0x36, 0x87, 0xf1, 0x1e,
	0x68, 0x48, 0x33, 0xf6, 0xd6, 0x66, 0xf9, 0x9e, 0xb8, 0x3c, 0x83, 0xb2, 0xfd, 0xda, 0xfe, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x70, 0x12, 0xbc, 0xb8, 0x86, 0x01, 0x00, 0x00,
}

func (m *MsgSWCYUnstake) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSWCYUnstake) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSWCYUnstake) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.BasisPoints.Size()
		i -= size
		if _, err := m.BasisPoints.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMsgSwcyUnstake(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Tx.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgSwcyUnstake(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintMsgSwcyUnstake(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMsgSwcyUnstake(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgSwcyUnstake(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSWCYUnstake) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovMsgSwcyUnstake(uint64(l))
	}
	l = m.Tx.Size()
	n += 1 + l + sovMsgSwcyUnstake(uint64(l))
	l = m.BasisPoints.Size()
	n += 1 + l + sovMsgSwcyUnstake(uint64(l))
	return n
}

func sovMsgSwcyUnstake(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgSwcyUnstake(x uint64) (n int) {
	return sovMsgSwcyUnstake(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSWCYUnstake) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgSwcyUnstake
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSWCYUnstake: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSWCYUnstake: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgSwcyUnstake
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgSwcyUnstake
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgSwcyUnstake
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = append(m.Signer[:0], dAtA[iNdEx:postIndex]...)
			if m.Signer == nil {
				m.Signer = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgSwcyUnstake
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgSwcyUnstake
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgSwcyUnstake
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Tx.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BasisPoints", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgSwcyUnstake
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgSwcyUnstake
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgSwcyUnstake
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BasisPoints.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgSwcyUnstake(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgSwcyUnstake
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgSwcyUnstake(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgSwcyUnstake
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgSwcyUnstake
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgSwcyUnstake
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgSwcyUnstake
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgSwcyUnstake
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgSwcyUnstake
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgSwcyUnstake        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgSwcyUnstake          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgSwcyUnstake = fmt.Errorf("proto: unexpected end of group")
)
