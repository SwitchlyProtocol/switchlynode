// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_switch_provider.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QuerySWITCHProviderRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Height  string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QuerySWITCHProviderRequest) Reset()         { *m = QuerySWITCHProviderRequest{} }
func (m *QuerySWITCHProviderRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySWITCHProviderRequest) ProtoMessage()    {}
func (*QuerySWITCHProviderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3339fde0318541b, []int{0}
}
func (m *QuerySWITCHProviderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySWITCHProviderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySWITCHProviderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySWITCHProviderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySWITCHProviderRequest.Merge(m, src)
}
func (m *QuerySWITCHProviderRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySWITCHProviderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySWITCHProviderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySWITCHProviderRequest proto.InternalMessageInfo

func (m *QuerySWITCHProviderRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QuerySWITCHProviderRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QuerySWITCHProviderResponse struct {
	SwitchAddress      string `protobuf:"bytes,1,opt,name=switch_address,json=switchAddress,proto3" json:"switch_address"`
	Units              string `protobuf:"bytes,2,opt,name=units,proto3" json:"units"`
	Value              string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`
	Pnl                string `protobuf:"bytes,4,opt,name=pnl,proto3" json:"pnl"`
	DepositAmount      string `protobuf:"bytes,5,opt,name=deposit_amount,json=depositAmount,proto3" json:"deposit_amount"`
	WithdrawAmount     string `protobuf:"bytes,6,opt,name=withdraw_amount,json=withdrawAmount,proto3" json:"withdraw_amount"`
	LastDepositHeight  int64  `protobuf:"varint,7,opt,name=last_deposit_height,json=lastDepositHeight,proto3" json:"last_deposit_height"`
	LastWithdrawHeight int64  `protobuf:"varint,8,opt,name=last_withdraw_height,json=lastWithdrawHeight,proto3" json:"last_withdraw_height"`
}

func (m *QuerySWITCHProviderResponse) Reset()         { *m = QuerySWITCHProviderResponse{} }
func (m *QuerySWITCHProviderResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySWITCHProviderResponse) ProtoMessage()    {}
func (*QuerySWITCHProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3339fde0318541b, []int{1}
}
func (m *QuerySWITCHProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySWITCHProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySWITCHProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySWITCHProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySWITCHProviderResponse.Merge(m, src)
}
func (m *QuerySWITCHProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySWITCHProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySWITCHProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySWITCHProviderResponse proto.InternalMessageInfo

func (m *QuerySWITCHProviderResponse) GetSwitchAddress() string {
	if m != nil {
		return m.SwitchAddress
	}
	return ""
}

func (m *QuerySWITCHProviderResponse) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

func (m *QuerySWITCHProviderResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *QuerySWITCHProviderResponse) GetPnl() string {
	if m != nil {
		return m.Pnl
	}
	return ""
}

func (m *QuerySWITCHProviderResponse) GetDepositAmount() string {
	if m != nil {
		return m.DepositAmount
	}
	return ""
}

func (m *QuerySWITCHProviderResponse) GetWithdrawAmount() string {
	if m != nil {
		return m.WithdrawAmount
	}
	return ""
}

func (m *QuerySWITCHProviderResponse) GetLastDepositHeight() int64 {
	if m != nil {
		return m.LastDepositHeight
	}
	return 0
}

func (m *QuerySWITCHProviderResponse) GetLastWithdrawHeight() int64 {
	if m != nil {
		return m.LastWithdrawHeight
	}
	return 0
}

type QuerySWITCHProvidersRequest struct {
	Height string `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QuerySWITCHProvidersRequest) Reset()         { *m = QuerySWITCHProvidersRequest{} }
func (m *QuerySWITCHProvidersRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySWITCHProvidersRequest) ProtoMessage()    {}
func (*QuerySWITCHProvidersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3339fde0318541b, []int{2}
}
func (m *QuerySWITCHProvidersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySWITCHProvidersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySWITCHProvidersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySWITCHProvidersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySWITCHProvidersRequest.Merge(m, src)
}
func (m *QuerySWITCHProvidersRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySWITCHProvidersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySWITCHProvidersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySWITCHProvidersRequest proto.InternalMessageInfo

func (m *QuerySWITCHProvidersRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QuerySWITCHProvidersResponse struct {
	Providers []*QuerySWITCHProviderResponse `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (m *QuerySWITCHProvidersResponse) Reset()         { *m = QuerySWITCHProvidersResponse{} }
func (m *QuerySWITCHProvidersResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySWITCHProvidersResponse) ProtoMessage()    {}
func (*QuerySWITCHProvidersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3339fde0318541b, []int{3}
}
func (m *QuerySWITCHProvidersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySWITCHProvidersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySWITCHProvidersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySWITCHProvidersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySWITCHProvidersResponse.Merge(m, src)
}
func (m *QuerySWITCHProvidersResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySWITCHProvidersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySWITCHProvidersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySWITCHProvidersResponse proto.InternalMessageInfo

func (m *QuerySWITCHProvidersResponse) GetProviders() []*QuerySWITCHProviderResponse {
	if m != nil {
		return m.Providers
	}
	return nil
}

func init() {
	proto.RegisterType((*QuerySWITCHProviderRequest)(nil), "types.QuerySWITCHProviderRequest")
	proto.RegisterType((*QuerySWITCHProviderResponse)(nil), "types.QuerySWITCHProviderResponse")
	proto.RegisterType((*QuerySWITCHProvidersRequest)(nil), "types.QuerySWITCHProvidersRequest")
	proto.RegisterType((*QuerySWITCHProvidersResponse)(nil), "types.QuerySWITCHProvidersResponse")
}

func init() { proto.RegisterFile("types/query_switch_provider.proto", fileDescriptor_d3339fde0318541b) }

var fileDescriptor_d3339fde0318541b = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xcf, 0x8f, 0x93, 0x40,
	0x14, 0x2e, 0x62, 0x5b, 0x3b, 0x66, 0xd7, 0x38, 0xbb, 0x51, 0x5c, 0x0d, 0xac, 0x9c, 0x7a, 0x82,
	0xc4, 0x8d, 0x07, 0x93, 0x3d, 0xb8, 0x68, 0xe2, 0xea, 0xc1, 0xe8, 0x68, 0xdc, 0xc4, 0x0b, 0xd2,
	0x32, 0x01, 0x12, 0xca, 0x50, 0x66, 0x68, 0xed, 0x7f, 0xe1, 0xff, 0xe4, 0xc5, 0x63, 0x8f, 0x9e,
	0x88, 0x69, 0x6f, 0xfc, 0x15, 0x66, 0x7e, 0x50, 0xd2, 0x86, 0xec, 0xa5, 0xd3, 0xef, 0xfb, 0xde,
	0xf7, 0xde, 0x0b, 0xef, 0x03, 0xcf, 0xd9, 0x2a, 0xc7, 0xd4, 0x9d, 0x97, 0xb8, 0x58, 0xf9, 0x74,
	0x99, 0xb0, 0x69, 0xec, 0xe7, 0x05, 0x59, 0x24, 0x21, 0x2e, 0x9c, 0xbc, 0x20, 0x8c, 0xc0, 0xbe,
	0x28, 0x39, 0x3b, 0x8d, 0x48, 0x44, 0x04, 0xe3, 0xf2, 0x7f, 0x52, 0xb4, 0x3f, 0x82, 0xb3, 0xcf,
	0xdc, 0xfb, 0xe5, 0xe6, 0xfd, 0xd7, 0x37, 0xd7, 0x9f, 0x94, 0x13, 0xe1, 0x79, 0x89, 0x29, 0x83,
	0x06, 0x18, 0x06, 0x61, 0x58, 0x60, 0x4a, 0x0d, 0xed, 0x5c, 0x1b, 0x8f, 0x50, 0x03, 0xe1, 0x23,
	0x30, 0x88, 0x71, 0x12, 0xc5, 0xcc, 0xb8, 0x23, 0x04, 0x85, 0xec, 0xdf, 0x3a, 0x78, 0xda, 0xd9,
	0x90, 0xe6, 0x24, 0xa3, 0x18, 0xbe, 0x02, 0xc7, 0x6a, 0xcb, 0xbd, 0xc6, 0x1e, 0xac, 0x2b, 0xeb,
	0x40, 0x41, 0x47, 0x12, 0x5f, 0xa9, 0x91, 0x16, 0xe8, 0x97, 0x59, 0xc2, 0xa8, 0x9c, 0xe8, 0x8d,
	0xea, 0xca, 0x92, 0x04, 0x92, 0x0f, 0x2f, 0x58, 0x04, 0x69, 0x89, 0x0d, 0xbd, 0x2d, 0x10, 0x04,
	0x92, 0x0f, 0x7c, 0x02, 0xf4, 0x3c, 0x4b, 0x8d, 0xbb, 0x42, 0x1e, 0xd6, 0x95, 0xc5, 0x21, 0xe2,
	0x3f, 0x7c, 0xaf, 0x10, 0xe7, 0x84, 0x26, 0xcc, 0x0f, 0x66, 0xa4, 0xcc, 0x98, 0xd1, 0x6f, 0xf7,
	0xda, 0x57, 0xd0, 0x91, 0xc2, 0x57, 0x02, 0xc2, 0x4b, 0xf0, 0x60, 0x99, 0xb0, 0x38, 0x2c, 0x82,
	0x65, 0xe3, 0x1d, 0x08, 0xef, 0x49, 0x5d, 0x59, 0x87, 0x12, 0x3a, 0x6e, 0x08, 0xe5, 0x7e, 0x07,
	0x4e, 0xd2, 0x80, 0x32, 0xbf, 0x99, 0xa1, 0xbe, 0xea, 0xf0, 0x5c, 0x1b, 0xeb, 0xde, 0xe3, 0xba,
	0xb2, 0xba, 0x64, 0xf4, 0x90, 0x93, 0x6f, 0x25, 0x77, 0x2d, 0x28, 0xf8, 0x01, 0x9c, 0x8a, 0xca,
	0xdd, 0x40, 0xd5, 0xe9, 0x9e, 0xe8, 0x64, 0xd4, 0x95, 0xd5, 0xa9, 0x23, 0xc8, 0xd9, 0x1b, 0x45,
	0xca, 0x5e, 0xf6, 0xcb, 0xce, 0x23, 0xd2, 0x26, 0x16, 0xed, 0xf1, 0xb5, 0xbd, 0xe3, 0xff, 0x00,
	0xcf, 0xba, 0x6d, 0xea, 0xf8, 0xaf, 0xc1, 0xa8, 0xc9, 0x26, 0xbf, 0xbb, 0x3e, 0xbe, 0xff, 0xc2,
	0x76, 0x44, 0x3a, 0x9d, 0x5b, 0x32, 0x83, 0x5a, 0x93, 0xf7, 0xed, 0xcf, 0xc6, 0xd4, 0xd6, 0x1b,
	0x53, 0xfb, 0xb7, 0x31, 0xb5, 0x5f, 0x5b, 0xb3, 0xb7, 0xde, 0x9a, 0xbd, 0xbf, 0x5b, 0xb3, 0xf7,
	0xfd, 0x32, 0x4a, 0x58, 0x5c, 0x4e, 0x9c, 0x29, 0x99, 0xb9, 0x32, 0x37, 0xe9, 0x4a, 0x44, 0x7c,
	0x4a, 0xd2, 0x1d, 0x91, 0x91, 0x10, 0xbb, 0x8b, 0x0b, 0xf7, 0xe7, 0x8e, 0x71, 0xc5, 0xf8, 0xc9,
	0x40, 0x94, 0x5e, 0xfc, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x60, 0x49, 0x09, 0x65, 0x4f, 0x03, 0x00,
	0x00,
}

func (m *QuerySWITCHProviderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySWITCHProviderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySWITCHProviderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySWITCHProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySWITCHProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySWITCHProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastWithdrawHeight != 0 {
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(m.LastWithdrawHeight))
		i--
		dAtA[i] = 0x40
	}
	if m.LastDepositHeight != 0 {
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(m.LastDepositHeight))
		i--
		dAtA[i] = 0x38
	}
	if len(m.WithdrawAmount) > 0 {
		i -= len(m.WithdrawAmount)
		copy(dAtA[i:], m.WithdrawAmount)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.WithdrawAmount)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DepositAmount) > 0 {
		i -= len(m.DepositAmount)
		copy(dAtA[i:], m.DepositAmount)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.DepositAmount)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Pnl) > 0 {
		i -= len(m.Pnl)
		copy(dAtA[i:], m.Pnl)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.Pnl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Units) > 0 {
		i -= len(m.Units)
		copy(dAtA[i:], m.Units)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.Units)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SwitchAddress) > 0 {
		i -= len(m.SwitchAddress)
		copy(dAtA[i:], m.SwitchAddress)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.SwitchAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySWITCHProvidersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySWITCHProvidersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySWITCHProvidersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySWITCHProvidersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySWITCHProvidersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySWITCHProvidersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Providers) > 0 {
		for iNdEx := len(m.Providers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Providers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuerySwitchProvider(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuerySwitchProvider(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuerySwitchProvider(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QuerySWITCHProviderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	return n
}

func (m *QuerySWITCHProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SwitchAddress)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	l = len(m.Units)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	l = len(m.Pnl)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	l = len(m.DepositAmount)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	l = len(m.WithdrawAmount)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	if m.LastDepositHeight != 0 {
		n += 1 + sovQuerySwitchProvider(uint64(m.LastDepositHeight))
	}
	if m.LastWithdrawHeight != 0 {
		n += 1 + sovQuerySwitchProvider(uint64(m.LastWithdrawHeight))
	}
	return n
}

func (m *QuerySWITCHProvidersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQuerySwitchProvider(uint64(l))
	}
	return n
}

func (m *QuerySWITCHProvidersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Providers) > 0 {
		for _, e := range m.Providers {
			l = e.Size()
			n += 1 + l + sovQuerySwitchProvider(uint64(l))
		}
	}
	return n
}

func sovQuerySwitchProvider(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuerySwitchProvider(x uint64) (n int) {
	return sovQuerySwitchProvider(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QuerySWITCHProviderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySwitchProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySWITCHProviderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySWITCHProviderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySwitchProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySWITCHProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySwitchProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySWITCHProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySWITCHProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwitchAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Units", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Units = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pnl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pnl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WithdrawAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDepositHeight", wireType)
			}
			m.LastDepositHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastDepositHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastWithdrawHeight", wireType)
			}
			m.LastWithdrawHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastWithdrawHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySwitchProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySWITCHProvidersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySwitchProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySWITCHProvidersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySWITCHProvidersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySwitchProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySWITCHProvidersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySwitchProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySWITCHProvidersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySWITCHProvidersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Providers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Providers = append(m.Providers, &QuerySWITCHProviderResponse{})
			if err := m.Providers[len(m.Providers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySwitchProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySwitchProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuerySwitchProvider(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuerySwitchProvider
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySwitchProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuerySwitchProvider
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuerySwitchProvider
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuerySwitchProvider
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuerySwitchProvider        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuerySwitchProvider          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuerySwitchProvider = fmt.Errorf("proto: unexpected end of group")
)
