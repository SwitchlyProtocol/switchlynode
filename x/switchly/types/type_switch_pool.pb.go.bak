// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/type_switch_pool.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// SwitchPool represents ownership of currently active POL.
type SwitchPool struct {
	ReserveUnits    cosmossdk_io_math.Uint `protobuf:"bytes,1,opt,name=reserve_units,json=reserveUnits,proto3,customtype=cosmossdk.io/math.Uint" json:"reserve_units"`
	PoolUnits       cosmossdk_io_math.Uint `protobuf:"bytes,2,opt,name=pool_units,json=poolUnits,proto3,customtype=cosmossdk.io/math.Uint" json:"pool_units"`
	SwitchDeposited cosmossdk_io_math.Uint `protobuf:"bytes,3,opt,name=switch_deposited,json=switchDeposited,proto3,customtype=cosmossdk.io/math.Uint" json:"switch_deposited"`
	SwitchWithdrawn cosmossdk_io_math.Uint `protobuf:"bytes,4,opt,name=switch_withdrawn,json=switchWithdrawn,proto3,customtype=cosmossdk.io/math.Uint" json:"switch_withdrawn"`
}

func (m *SwitchPool) Reset()         { *m = SwitchPool{} }
func (m *SwitchPool) String() string { return proto.CompactTextString(m) }
func (*SwitchPool) ProtoMessage()    {}
func (*SwitchPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c35c026367babc1, []int{0}
}
func (m *SwitchPool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SwitchPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SwitchPool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SwitchPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchPool.Merge(m, src)
}
func (m *SwitchPool) XXX_Size() int {
	return m.Size()
}
func (m *SwitchPool) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchPool.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchPool proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SwitchPool)(nil), "types.SwitchPool")
}

func init() { proto.RegisterFile("types/type_switch_pool.proto", fileDescriptor_4c35c026367babc1) }

var fileDescriptor_4c35c026367babc1 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x07, 0x91, 0xf1, 0xc5, 0xe5, 0x99, 0x25, 0xc9, 0x19, 0xf1, 0x05, 0xf9, 0xf9, 0x39,
	0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xac, 0x60, 0x59, 0x29, 0x91, 0xf4, 0xfc, 0xf4, 0x7c,
	0xb0, 0x88, 0x3e, 0x88, 0x05, 0x91, 0x54, 0x5a, 0xc6, 0xc4, 0xc5, 0x15, 0x0c, 0xd6, 0x12, 0x90,
	0x9f, 0x9f, 0x23, 0xe4, 0xcc, 0xc5, 0x5b, 0x94, 0x5a, 0x9c, 0x5a, 0x54, 0x96, 0x1a, 0x5f, 0x9a,
	0x97, 0x59, 0x52, 0x2c, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0xe9, 0x24, 0x77, 0xe2, 0x9e, 0x3c, 0xc3,
	0xad, 0x7b, 0xf2, 0x62, 0xc9, 0xf9, 0xc5, 0xb9, 0xf9, 0xc5, 0xc5, 0x29, 0xd9, 0x7a, 0x99, 0xf9,
	0xfa, 0xb9, 0x89, 0x25, 0x19, 0x7a, 0xa1, 0x99, 0x79, 0x25, 0x41, 0x3c, 0x50, 0x4d, 0xa1, 0x20,
	0x3d, 0x42, 0xb6, 0x5c, 0x5c, 0x20, 0xeb, 0xa1, 0x26, 0x30, 0x11, 0x65, 0x02, 0x27, 0x48, 0x07,
	0x44, 0xbb, 0x27, 0x97, 0x00, 0xd4, 0x13, 0x29, 0xa9, 0x05, 0xf9, 0xc5, 0x99, 0x25, 0xa9, 0x29,
	0x12, 0xcc, 0x44, 0x19, 0xc2, 0x0f, 0xd1, 0xe7, 0x02, 0xd3, 0x86, 0x64, 0x54, 0x79, 0x66, 0x49,
	0x46, 0x4a, 0x51, 0x62, 0x79, 0x9e, 0x04, 0x0b, 0x29, 0x46, 0x85, 0xc3, 0xb4, 0x39, 0x85, 0x9d,
	0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31,
	0x5c, 0x78, 0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x94, 0x4d, 0x7a, 0x66, 0x49, 0x46, 0x69,
	0x92, 0x5e, 0x72, 0x7e, 0xae, 0x3e, 0x44, 0x57, 0x4e, 0x25, 0x38, 0x70, 0x93, 0xf3, 0x73, 0xe0,
	0x02, 0x79, 0xf9, 0x29, 0xa9, 0xfa, 0x65, 0xc6, 0xfa, 0x15, 0x70, 0x11, 0x70, 0x74, 0x15, 0x27,
	0xb1, 0x81, 0x95, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x56, 0xaa, 0x80, 0xce, 0xc4, 0x01,
	0x00, 0x00,
}

func (m *SwitchPool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwitchPool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SwitchPool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.SwitchWithdrawn.Size()
		i -= size
		if _, err := m.SwitchWithdrawn.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeSwitchPool(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.SwitchDeposited.Size()
		i -= size
		if _, err := m.SwitchDeposited.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeSwitchPool(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.PoolUnits.Size()
		i -= size
		if _, err := m.PoolUnits.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeSwitchPool(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.ReserveUnits.Size()
		i -= size
		if _, err := m.ReserveUnits.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeSwitchPool(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintTypeSwitchPool(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypeSwitchPool(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SwitchPool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ReserveUnits.Size()
	n += 1 + l + sovTypeSwitchPool(uint64(l))
	l = m.PoolUnits.Size()
	n += 1 + l + sovTypeSwitchPool(uint64(l))
	l = m.SwitchDeposited.Size()
	n += 1 + l + sovTypeSwitchPool(uint64(l))
	l = m.SwitchWithdrawn.Size()
	n += 1 + l + sovTypeSwitchPool(uint64(l))
	return n
}

func sovTypeSwitchPool(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypeSwitchPool(x uint64) (n int) {
	return sovTypeSwitchPool(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SwitchPool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypeSwitchPool
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwitchPool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwitchPool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveUnits", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchPool
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ReserveUnits.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolUnits", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchPool
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PoolUnits.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchDeposited", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchPool
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SwitchDeposited.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchWithdrawn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchPool
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SwitchWithdrawn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypeSwitchPool(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypeSwitchPool
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypeSwitchPool(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypeSwitchPool
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeSwitchPool
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeSwitchPool
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypeSwitchPool
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypeSwitchPool
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypeSwitchPool
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypeSwitchPool        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypeSwitchPool          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypeSwitchPool = fmt.Errorf("proto: unexpected end of group")
)
