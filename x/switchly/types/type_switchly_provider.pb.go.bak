// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/type_switchly_provider.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SWITCHProvider struct {
	SwitchAddress      github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=switch_address,json=switchAddress,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"switch_address,omitempty"`
	DepositAmount      cosmossdk_io_math.Uint                        `protobuf:"bytes,2,opt,name=deposit_amount,json=depositAmount,proto3,customtype=cosmossdk.io/math.Uint" json:"deposit_amount"`
	WithdrawAmount     cosmossdk_io_math.Uint                        `protobuf:"bytes,3,opt,name=withdraw_amount,json=withdrawAmount,proto3,customtype=cosmossdk.io/math.Uint" json:"withdraw_amount"`
	Units              cosmossdk_io_math.Uint                        `protobuf:"bytes,4,opt,name=units,proto3,customtype=cosmossdk.io/math.Uint" json:"units"`
	LastDepositHeight  int64                                         `protobuf:"varint,5,opt,name=last_deposit_height,json=lastDepositHeight,proto3" json:"last_deposit_height,omitempty"`
	LastWithdrawHeight int64                                         `protobuf:"varint,6,opt,name=last_withdraw_height,json=lastWithdrawHeight,proto3" json:"last_withdraw_height,omitempty"`
}

func (m *SWITCHProvider) Reset()         { *m = SWITCHProvider{} }
func (m *SWITCHProvider) String() string { return proto.CompactTextString(m) }
func (*SWITCHProvider) ProtoMessage()    {}
func (*SWITCHProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_af8bded10269435e, []int{0}
}
func (m *SWITCHProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SWITCHProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SWITCHProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SWITCHProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SWITCHProvider.Merge(m, src)
}
func (m *SWITCHProvider) XXX_Size() int {
	return m.Size()
}
func (m *SWITCHProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_SWITCHProvider.DiscardUnknown(m)
}

var xxx_messageInfo_SWITCHProvider proto.InternalMessageInfo

func (m *SWITCHProvider) GetSwitchAddress() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.SwitchAddress
	}
	return nil
}

func (m *SWITCHProvider) GetLastDepositHeight() int64 {
	if m != nil {
		return m.LastDepositHeight
	}
	return 0
}

func (m *SWITCHProvider) GetLastWithdrawHeight() int64 {
	if m != nil {
		return m.LastWithdrawHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*SWITCHProvider)(nil), "types.SWITCHProvider")
}

func init() {
	proto.RegisterFile("types/type_switchly_provider.proto", fileDescriptor_af8bded10269435e)
}

var fileDescriptor_af8bded10269435e = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xbf, 0x6e, 0xea, 0x30,
	0x14, 0xc6, 0xe3, 0xcb, 0x05, 0xe9, 0x5a, 0x97, 0x54, 0x75, 0x51, 0x15, 0x75, 0x30, 0x88, 0x89,
	0x85, 0xa4, 0x15, 0x1d, 0xbb, 0x40, 0x5b, 0x95, 0x6e, 0x15, 0xfd, 0x43, 0xd5, 0x25, 0x0a, 0x71,
	0x94, 0x58, 0x90, 0x38, 0x8a, 0x0d, 0x94, 0xb7, 0xa8, 0xfa, 0x54, 0x8c, 0x8c, 0x55, 0x07, 0x54,
	0xc1, 0x5b, 0x74, 0xaa, 0x62, 0x3b, 0xa8, 0x23, 0x8b, 0xff, 0x9c, 0xef, 0xfb, 0x7d, 0x3a, 0xf6,
	0x81, 0x4d, 0xb1, 0x48, 0x03, 0xee, 0xe4, 0xab, 0xcb, 0xe7, 0x54, 0xf8, 0xd1, 0x64, 0xe1, 0xa6,
	0x19, 0x9b, 0x51, 0x12, 0x64, 0x76, 0x9a, 0x31, 0xc1, 0x50, 0x59, 0x7a, 0x4e, 0x6a, 0x21, 0x0b,
	0x99, 0xac, 0x38, 0xf9, 0x49, 0x89, 0xcd, 0xf7, 0x12, 0x34, 0xef, 0x87, 0xb7, 0x0f, 0x97, 0xfd,
	0x3b, 0x4d, 0xa1, 0x67, 0x68, 0xaa, 0x28, 0xd7, 0x23, 0x24, 0x0b, 0x38, 0xb7, 0x40, 0x03, 0xb4,
	0xfe, 0xf7, 0xce, 0xbe, 0xd7, 0xf5, 0x76, 0x48, 0x45, 0x34, 0x1d, 0xd9, 0x3e, 0x8b, 0x1d, 0x9f,
	0xf1, 0x98, 0x71, 0xbd, 0xb5, 0x39, 0x19, 0xcb, 0x36, 0xb8, 0xdd, 0xf5, 0xfd, 0xae, 0x02, 0x07,
	0x55, 0x15, 0xa4, 0xaf, 0xe8, 0x1a, 0x9a, 0x24, 0x48, 0x19, 0xa7, 0xc2, 0xf5, 0x62, 0x36, 0x4d,
	0x84, 0xf5, 0xa7, 0x01, 0x5a, 0xff, 0x7a, 0x78, 0xb9, 0xae, 0x1b, 0x9f, 0xeb, 0xfa, 0xb1, 0xca,
	0xe2, 0x64, 0x6c, 0x53, 0xe6, 0xc4, 0x9e, 0x88, 0xec, 0x47, 0x9a, 0x88, 0x41, 0x55, 0x53, 0x5d,
	0x09, 0xa1, 0x1b, 0x78, 0x30, 0xa7, 0x22, 0x22, 0x99, 0x37, 0x2f, 0x72, 0x4a, 0x7b, 0xe5, 0x98,
	0x05, 0xa6, 0x83, 0xce, 0x61, 0x79, 0x9a, 0x50, 0xc1, 0xad, 0xbf, 0x7b, 0xe1, 0xca, 0x8c, 0x6c,
	0x78, 0x34, 0xf1, 0xb8, 0x70, 0x8b, 0xa7, 0x44, 0x01, 0x0d, 0x23, 0x61, 0x95, 0x1b, 0xa0, 0x55,
	0x1a, 0x1c, 0xe6, 0xd2, 0x95, 0x52, 0xfa, 0x52, 0x40, 0xa7, 0xb0, 0x26, 0xfd, 0xbb, 0x9e, 0x35,
	0x50, 0x91, 0x00, 0xca, 0xb5, 0xa1, 0x96, 0x14, 0xd1, 0x7b, 0x5a, 0x6e, 0x30, 0x58, 0x6d, 0x30,
	0xf8, 0xda, 0x60, 0xf0, 0xb6, 0xc5, 0xc6, 0x6a, 0x8b, 0x8d, 0x8f, 0x2d, 0x36, 0x5e, 0x2e, 0x7e,
	0xfd, 0x7f, 0x31, 0x6f, 0x39, 0x48, 0x9f, 0x4d, 0x76, 0x85, 0x84, 0x91, 0xc0, 0x99, 0x75, 0x9c,
	0xd7, 0x5d, 0x45, 0x4d, 0x66, 0x54, 0x91, 0xd6, 0xce, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f,
	0x67, 0xd0, 0x27, 0x36, 0x02, 0x00, 0x00,
}

func (m *SWITCHProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SWITCHProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SWITCHProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastWithdrawHeight != 0 {
		i = encodeVarintTypeSwitchlyProvider(dAtA, i, uint64(m.LastWithdrawHeight))
		i--
		dAtA[i] = 0x30
	}
	if m.LastDepositHeight != 0 {
		i = encodeVarintTypeSwitchlyProvider(dAtA, i, uint64(m.LastDepositHeight))
		i--
		dAtA[i] = 0x28
	}
	{
		size := m.Units.Size()
		i -= size
		if _, err := m.Units.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeSwitchlyProvider(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.WithdrawAmount.Size()
		i -= size
		if _, err := m.WithdrawAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeSwitchlyProvider(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.DepositAmount.Size()
		i -= size
		if _, err := m.DepositAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTypeSwitchlyProvider(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.SwitchAddress) > 0 {
		i -= len(m.SwitchAddress)
		copy(dAtA[i:], m.SwitchAddress)
		i = encodeVarintTypeSwitchlyProvider(dAtA, i, uint64(len(m.SwitchAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypeSwitchlyProvider(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypeSwitchlyProvider(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SWITCHProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SwitchAddress)
	if l > 0 {
		n += 1 + l + sovTypeSwitchlyProvider(uint64(l))
	}
	l = m.DepositAmount.Size()
	n += 1 + l + sovTypeSwitchlyProvider(uint64(l))
	l = m.WithdrawAmount.Size()
	n += 1 + l + sovTypeSwitchlyProvider(uint64(l))
	l = m.Units.Size()
	n += 1 + l + sovTypeSwitchlyProvider(uint64(l))
	if m.LastDepositHeight != 0 {
		n += 1 + sovTypeSwitchlyProvider(uint64(m.LastDepositHeight))
	}
	if m.LastWithdrawHeight != 0 {
		n += 1 + sovTypeSwitchlyProvider(uint64(m.LastWithdrawHeight))
	}
	return n
}

func sovTypeSwitchlyProvider(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypeSwitchlyProvider(x uint64) (n int) {
	return sovTypeSwitchlyProvider(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SWITCHProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypeSwitchlyProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SWITCHProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SWITCHProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchAddress", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwitchAddress = append(m.SwitchAddress[:0], dAtA[iNdEx:postIndex]...)
			if m.SwitchAddress == nil {
				m.SwitchAddress = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DepositAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.WithdrawAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Units", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Units.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDepositHeight", wireType)
			}
			m.LastDepositHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastDepositHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastWithdrawHeight", wireType)
			}
			m.LastWithdrawHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastWithdrawHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTypeSwitchlyProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypeSwitchlyProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypeSwitchlyProvider(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypeSwitchlyProvider
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypeSwitchlyProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypeSwitchlyProvider
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypeSwitchlyProvider
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypeSwitchlyProvider
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypeSwitchlyProvider        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypeSwitchlyProvider          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypeSwitchlyProvider = fmt.Errorf("proto: unexpected end of group")
)
