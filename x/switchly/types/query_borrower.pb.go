// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_borrower.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryBorrowerRequest struct {
	Asset   string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Height  string `protobuf:"bytes,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QueryBorrowerRequest) Reset()         { *m = QueryBorrowerRequest{} }
func (m *QueryBorrowerRequest) String() string { return proto.CompactTextString(m) }
func (*QueryBorrowerRequest) ProtoMessage()    {}
func (*QueryBorrowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff65bcb6426532b4, []int{0}
}
func (m *QueryBorrowerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryBorrowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryBorrowerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryBorrowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBorrowerRequest.Merge(m, src)
}
func (m *QueryBorrowerRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryBorrowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBorrowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBorrowerRequest proto.InternalMessageInfo

func (m *QueryBorrowerRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *QueryBorrowerRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryBorrowerRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QueryBorrowerResponse struct {
	Owner               string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner"`
	Asset               string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset"`
	DebtIssued          string `protobuf:"bytes,3,opt,name=debt_issued,json=debtIssued,proto3" json:"debt_issued"`
	DebtRepaid          string `protobuf:"bytes,4,opt,name=debt_repaid,json=debtRepaid,proto3" json:"debt_repaid"`
	DebtCurrent         string `protobuf:"bytes,5,opt,name=debt_current,json=debtCurrent,proto3" json:"debt_current"`
	CollateralDeposited string `protobuf:"bytes,6,opt,name=collateral_deposited,json=collateralDeposited,proto3" json:"collateral_deposited"`
	CollateralWithdrawn string `protobuf:"bytes,7,opt,name=collateral_withdrawn,json=collateralWithdrawn,proto3" json:"collateral_withdrawn"`
	CollateralCurrent   string `protobuf:"bytes,8,opt,name=collateral_current,json=collateralCurrent,proto3" json:"collateral_current"`
	LastOpenHeight      int64  `protobuf:"varint,9,opt,name=last_open_height,json=lastOpenHeight,proto3" json:"last_open_height"`
	LastRepayHeight     int64  `protobuf:"varint,10,opt,name=last_repay_height,json=lastRepayHeight,proto3" json:"last_repay_height"`
}

func (m *QueryBorrowerResponse) Reset()         { *m = QueryBorrowerResponse{} }
func (m *QueryBorrowerResponse) String() string { return proto.CompactTextString(m) }
func (*QueryBorrowerResponse) ProtoMessage()    {}
func (*QueryBorrowerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff65bcb6426532b4, []int{1}
}
func (m *QueryBorrowerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryBorrowerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryBorrowerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryBorrowerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBorrowerResponse.Merge(m, src)
}
func (m *QueryBorrowerResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryBorrowerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBorrowerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBorrowerResponse proto.InternalMessageInfo

func (m *QueryBorrowerResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *QueryBorrowerResponse) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *QueryBorrowerResponse) GetDebtIssued() string {
	if m != nil {
		return m.DebtIssued
	}
	return ""
}

func (m *QueryBorrowerResponse) GetDebtRepaid() string {
	if m != nil {
		return m.DebtRepaid
	}
	return ""
}

func (m *QueryBorrowerResponse) GetDebtCurrent() string {
	if m != nil {
		return m.DebtCurrent
	}
	return ""
}

func (m *QueryBorrowerResponse) GetCollateralDeposited() string {
	if m != nil {
		return m.CollateralDeposited
	}
	return ""
}

func (m *QueryBorrowerResponse) GetCollateralWithdrawn() string {
	if m != nil {
		return m.CollateralWithdrawn
	}
	return ""
}

func (m *QueryBorrowerResponse) GetCollateralCurrent() string {
	if m != nil {
		return m.CollateralCurrent
	}
	return ""
}

func (m *QueryBorrowerResponse) GetLastOpenHeight() int64 {
	if m != nil {
		return m.LastOpenHeight
	}
	return 0
}

func (m *QueryBorrowerResponse) GetLastRepayHeight() int64 {
	if m != nil {
		return m.LastRepayHeight
	}
	return 0
}

type QueryBorrowersRequest struct {
	Asset  string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QueryBorrowersRequest) Reset()         { *m = QueryBorrowersRequest{} }
func (m *QueryBorrowersRequest) String() string { return proto.CompactTextString(m) }
func (*QueryBorrowersRequest) ProtoMessage()    {}
func (*QueryBorrowersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff65bcb6426532b4, []int{2}
}
func (m *QueryBorrowersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryBorrowersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryBorrowersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryBorrowersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBorrowersRequest.Merge(m, src)
}
func (m *QueryBorrowersRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryBorrowersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBorrowersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBorrowersRequest proto.InternalMessageInfo

func (m *QueryBorrowersRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *QueryBorrowersRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QueryBorrowersResponse struct {
	Borrowers []*QueryBorrowerResponse `protobuf:"bytes,1,rep,name=borrowers,proto3" json:"borrowers,omitempty"`
}

func (m *QueryBorrowersResponse) Reset()         { *m = QueryBorrowersResponse{} }
func (m *QueryBorrowersResponse) String() string { return proto.CompactTextString(m) }
func (*QueryBorrowersResponse) ProtoMessage()    {}
func (*QueryBorrowersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff65bcb6426532b4, []int{3}
}
func (m *QueryBorrowersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryBorrowersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryBorrowersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryBorrowersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBorrowersResponse.Merge(m, src)
}
func (m *QueryBorrowersResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryBorrowersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBorrowersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBorrowersResponse proto.InternalMessageInfo

func (m *QueryBorrowersResponse) GetBorrowers() []*QueryBorrowerResponse {
	if m != nil {
		return m.Borrowers
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryBorrowerRequest)(nil), "types.QueryBorrowerRequest")
	proto.RegisterType((*QueryBorrowerResponse)(nil), "types.QueryBorrowerResponse")
	proto.RegisterType((*QueryBorrowersRequest)(nil), "types.QueryBorrowersRequest")
	proto.RegisterType((*QueryBorrowersResponse)(nil), "types.QueryBorrowersResponse")
}

func init() { proto.RegisterFile("types/query_borrower.proto", fileDescriptor_ff65bcb6426532b4) }

var fileDescriptor_ff65bcb6426532b4 = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x9b, 0x76, 0xed, 0xa8, 0x87, 0xd8, 0x66, 0xba, 0xca, 0x9a, 0x50, 0x52, 0xf5, 0xd4,
	0x53, 0x83, 0xe8, 0x0d, 0x21, 0x24, 0x0a, 0x93, 0x40, 0x1c, 0x10, 0x16, 0x02, 0x89, 0x03, 0x55,
	0x9a, 0x3c, 0x35, 0x91, 0x42, 0x9c, 0xd9, 0x0e, 0x21, 0xdf, 0x82, 0x8f, 0xc5, 0x71, 0x27, 0xc4,
	0x29, 0x42, 0xed, 0x2d, 0x9f, 0x02, 0xc5, 0x6e, 0x9a, 0x2e, 0xab, 0x76, 0x8a, 0xdf, 0xef, 0xff,
	0xde, 0xff, 0xd9, 0xf1, 0x33, 0xba, 0x94, 0x59, 0x0c, 0xc2, 0xbe, 0x4e, 0x80, 0x67, 0x8b, 0x25,
	0xe3, 0x9c, 0xa5, 0xc0, 0xa7, 0x31, 0x67, 0x92, 0xe1, 0xae, 0xd2, 0x2e, 0x07, 0x2b, 0xb6, 0x62,
	0x8a, 0xd8, 0xe5, 0x4a, 0x8b, 0xe3, 0x6f, 0x68, 0xf0, 0xb1, 0x2c, 0x9a, 0x6f, 0x6b, 0x28, 0x5c,
	0x27, 0x20, 0x24, 0x1e, 0xa0, 0xae, 0x23, 0x04, 0x48, 0x62, 0x8c, 0x8c, 0x49, 0x9f, 0xea, 0x00,
	0x13, 0x74, 0xec, 0x78, 0x1e, 0x07, 0x21, 0x48, 0x5b, 0xf1, 0x2a, 0xc4, 0x43, 0xd4, 0xf3, 0x21,
	0x58, 0xf9, 0x92, 0x74, 0x94, 0xb0, 0x8d, 0xc6, 0x7f, 0x8e, 0xd0, 0x45, 0xa3, 0x81, 0x88, 0x59,
	0x24, 0x00, 0x5b, 0xa8, 0xcb, 0xd2, 0x08, 0xb8, 0xee, 0x30, 0xef, 0x17, 0xb9, 0xa5, 0x01, 0xd5,
	0x9f, 0x32, 0x41, 0x6f, 0xa1, 0x5d, 0x27, 0x28, 0x50, 0xed, 0xe6, 0x29, 0x3a, 0xf1, 0x60, 0x29,
	0x17, 0x81, 0x10, 0x09, 0x78, 0xba, 0xf1, 0xfc, 0xb4, 0xc8, 0xad, 0x7d, 0x4c, 0x51, 0x19, 0xbc,
	0x53, 0xeb, 0x5d, 0x05, 0x87, 0xd8, 0x09, 0x3c, 0x72, 0xd4, 0xa8, 0xd0, 0x58, 0x57, 0x50, 0xb5,
	0xc6, 0x33, 0xf4, 0x50, 0x49, 0x6e, 0xc2, 0x39, 0x44, 0x92, 0x74, 0x55, 0xc9, 0x59, 0x91, 0x5b,
	0xb7, 0x38, 0x55, 0x06, 0xaf, 0x75, 0x80, 0xdf, 0xa3, 0x81, 0xcb, 0xc2, 0xd0, 0x91, 0xc0, 0x9d,
	0x70, 0xe1, 0x41, 0xcc, 0x44, 0x20, 0xc1, 0x23, 0x3d, 0x55, 0x4c, 0x8a, 0xdc, 0x3a, 0xa8, 0xd3,
	0xc7, 0x35, 0x7d, 0x53, 0xc1, 0x86, 0x59, 0x1a, 0x48, 0xdf, 0xe3, 0x4e, 0x1a, 0x91, 0xe3, 0x83,
	0x66, 0x3b, 0x7d, 0xdf, 0xec, 0x4b, 0x05, 0xf1, 0x15, 0xc2, 0x7b, 0xc9, 0xd5, 0xa1, 0x1e, 0x28,
	0xab, 0x61, 0x91, 0x5b, 0x07, 0x54, 0x7a, 0x5e, 0xb3, 0xea, 0x80, 0x2f, 0xd1, 0x59, 0xe8, 0x08,
	0xb9, 0x60, 0x31, 0x44, 0x8b, 0xed, 0xbd, 0xf7, 0x47, 0xc6, 0xa4, 0x33, 0x1f, 0x14, 0xb9, 0x75,
	0x47, 0xa3, 0x8f, 0x4a, 0xf2, 0x21, 0x86, 0xe8, 0xad, 0x8a, 0xf1, 0x2b, 0x74, 0xae, 0x72, 0xca,
	0x1f, 0x9e, 0x55, 0x06, 0x48, 0x19, 0x5c, 0x14, 0xb9, 0x75, 0x57, 0xa4, 0xa7, 0x25, 0x2a, 0xef,
	0x24, 0xd3, 0x16, 0xe3, 0xab, 0xc6, 0x5c, 0x89, 0xfb, 0x27, 0xb7, 0x9e, 0xcf, 0xf6, 0xad, 0xf9,
	0xfc, 0x84, 0x86, 0x4d, 0x9b, 0xed, 0x7c, 0x3e, 0x47, 0xfd, 0xea, 0x21, 0x09, 0x62, 0x8c, 0x3a,
	0x93, 0x93, 0x67, 0x4f, 0xa6, 0xea, 0x29, 0x4d, 0x0f, 0x0e, 0x34, 0xad, 0xd3, 0xe7, 0x9f, 0x7f,
	0xaf, 0x4d, 0xe3, 0x66, 0x6d, 0x1a, 0xff, 0xd6, 0xa6, 0xf1, 0x6b, 0x63, 0xb6, 0x6e, 0x36, 0x66,
	0xeb, 0xef, 0xc6, 0x6c, 0x7d, 0x7d, 0xb1, 0x0a, 0xa4, 0x9f, 0x2c, 0xa7, 0x2e, 0xfb, 0x6e, 0x8b,
	0x34, 0x90, 0xae, 0x1f, 0x66, 0xea, 0x25, 0xba, 0x2c, 0xdc, 0x81, 0x88, 0x79, 0x60, 0xff, 0x98,
	0xd9, 0x3f, 0x77, 0xc4, 0x56, 0x8d, 0x97, 0x3d, 0x95, 0x3a, 0xfb, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x4b, 0x02, 0x73, 0xd2, 0xef, 0x03, 0x00, 0x00,
}

func (m *QueryBorrowerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryBorrowerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryBorrowerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryBorrowerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryBorrowerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryBorrowerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastRepayHeight != 0 {
		i = encodeVarintQueryBorrower(dAtA, i, uint64(m.LastRepayHeight))
		i--
		dAtA[i] = 0x50
	}
	if m.LastOpenHeight != 0 {
		i = encodeVarintQueryBorrower(dAtA, i, uint64(m.LastOpenHeight))
		i--
		dAtA[i] = 0x48
	}
	if len(m.CollateralCurrent) > 0 {
		i -= len(m.CollateralCurrent)
		copy(dAtA[i:], m.CollateralCurrent)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.CollateralCurrent)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CollateralWithdrawn) > 0 {
		i -= len(m.CollateralWithdrawn)
		copy(dAtA[i:], m.CollateralWithdrawn)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.CollateralWithdrawn)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CollateralDeposited) > 0 {
		i -= len(m.CollateralDeposited)
		copy(dAtA[i:], m.CollateralDeposited)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.CollateralDeposited)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DebtCurrent) > 0 {
		i -= len(m.DebtCurrent)
		copy(dAtA[i:], m.DebtCurrent)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.DebtCurrent)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DebtRepaid) > 0 {
		i -= len(m.DebtRepaid)
		copy(dAtA[i:], m.DebtRepaid)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.DebtRepaid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DebtIssued) > 0 {
		i -= len(m.DebtIssued)
		copy(dAtA[i:], m.DebtIssued)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.DebtIssued)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryBorrowersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryBorrowersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryBorrowersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQueryBorrower(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryBorrowersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryBorrowersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryBorrowersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Borrowers) > 0 {
		for iNdEx := len(m.Borrowers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Borrowers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQueryBorrower(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueryBorrower(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueryBorrower(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryBorrowerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	return n
}

func (m *QueryBorrowerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.DebtIssued)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.DebtRepaid)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.DebtCurrent)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.CollateralDeposited)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.CollateralWithdrawn)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.CollateralCurrent)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	if m.LastOpenHeight != 0 {
		n += 1 + sovQueryBorrower(uint64(m.LastOpenHeight))
	}
	if m.LastRepayHeight != 0 {
		n += 1 + sovQueryBorrower(uint64(m.LastRepayHeight))
	}
	return n
}

func (m *QueryBorrowersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQueryBorrower(uint64(l))
	}
	return n
}

func (m *QueryBorrowersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Borrowers) > 0 {
		for _, e := range m.Borrowers {
			l = e.Size()
			n += 1 + l + sovQueryBorrower(uint64(l))
		}
	}
	return n
}

func sovQueryBorrower(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueryBorrower(x uint64) (n int) {
	return sovQueryBorrower(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryBorrowerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryBorrower
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryBorrowerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryBorrowerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryBorrower(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryBorrowerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryBorrower
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryBorrowerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryBorrowerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DebtIssued", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DebtIssued = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DebtRepaid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DebtRepaid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DebtCurrent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DebtCurrent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollateralDeposited", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollateralDeposited = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollateralWithdrawn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollateralWithdrawn = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollateralCurrent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollateralCurrent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastOpenHeight", wireType)
			}
			m.LastOpenHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastOpenHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastRepayHeight", wireType)
			}
			m.LastRepayHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastRepayHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQueryBorrower(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryBorrowersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryBorrower
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryBorrowersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryBorrowersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryBorrower(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryBorrowersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryBorrower
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryBorrowersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryBorrowersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Borrowers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Borrowers = append(m.Borrowers, &QueryBorrowerResponse{})
			if err := m.Borrowers[len(m.Borrowers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryBorrower(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryBorrower
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueryBorrower(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueryBorrower
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryBorrower
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueryBorrower
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueryBorrower
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueryBorrower
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueryBorrower        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueryBorrower          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueryBorrower = fmt.Errorf("proto: unexpected end of group")
)
