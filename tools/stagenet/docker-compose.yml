########################################################################################
# Config
########################################################################################

# trunk-ignore-all(yamllint/empty-values)

volumes:
  switchlynode:
  genesis-bifrost:
  validator-1-switchlynode:
  validator-1-bifrost:
  validator-2-switchlynode:
  validator-2-bifrost:
  validator-3-switchlynode:
  validator-3-bifrost:

########################################################################################
# Services
########################################################################################

services:
  _switchly: &switchly-defaults
    profiles:
      - _
    restart: unless-stopped
    build:
      context: ../..
      dockerfile: ./build/docker/Dockerfile
    environment: &switchly-environment
      NET: stagenet
      CHAIN_ID: switchly
      SIGNER_NAME: switchly
      SIGNER_PASSWD: password
      SWITCHLYNODE_GRPC_ENABLE: true
      SWITCHLY_SEED_NODES_ENDPOINT: ""

      # reuse stagenet router contract deployments, or deploy your own new ones
      ETH_CONTRACT: "0xa8D1Ff3bfA490cf7890D0D2C0A2f5815744A279F"
      XLM_CONTRACT: "CDOPUOETBQ35YN33H4IH5K32WDDLA5J5OVNRUUPGCO7F7S5DDBMJVLY4" # testnet

    logging: &logging
      driver: "json-file"
      options:
        max-size: "256m"
        max-file: "3"
    

  ######################################################################################
  # Genesis
  ######################################################################################

  # ------------------------------ switchlynode ------------------------------

  switchlynode: &switchlynode
    <<: *switchly-defaults
    profiles:
      - genesis
      - stagenet
    depends_on:
      - ethereum
      - stellar
    ports:
      - 27147:27147
      - 27146:27146
      - 1317:1317
      - 6060:6060
    volumes:
      - ./mnt:/mnt
      - switchlynode:/root/.switchlynode
    entrypoint: /scripts/genesis.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1317/cosmos/base/tendermint/v1beta1/node_info"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    environment: &switchlynode-environment
      <<: *switchly-environment
      SEED: switchlynode

  # ------------------------------ bifrost ------------------------------

  genesis-bifrost: &genesis-bifrost
    <<: *switchly-defaults
    profiles:
      - genesis
      - stagenet
    depends_on:
      switchlynode:
        condition: service_healthy
    ports:
      - 5040:5040
      - 6040:6040
    entrypoint: /scripts/bifrost.sh
    volumes:
      - "../../build/scripts:/docker/scripts"
      - genesis-bifrost:/var/data/bifrost
      - switchlynode:/root/.switchlynode
    command: ["bifrost"]

    environment: &genesis-bifrost-environment
      <<: *switchly-environment

      CHAIN_API: switchlynode:1317
      CHAIN_RPC: switchlynode:27147
      BIFROST_SWITCHLYCHAIN_CHAIN_EBIFROST: switchlynode:50051
      ETH_HOST: ${ETH_HOST:-http://ethereum:8545}
      XLM_HOST: ${XLM_HOST:-stellar:8000}
      BLOCK_SCANNER_BACKOFF: ${BLOCK_SCANNER_BACKOFF:-60s}
      PEER: ${PEER:-}

      BIFROST_CHAINS_AVAX_DISABLED: "true"
      BIFROST_CHAINS_AVAX_RPC_HOST: ""

      BIFROST_CHAINS_GAIA_DISABLED: "true"
      BIFROST_CHAINS_GAIA_RPC_HOST: ""
      BIFROST_CHAINS_GAIA_COSMOS_GRPC_HOST: ""

      BIFROST_CHAINS_BSC_DISABLED: "true"
      BIFROST_CHAINS_BSC_RPC_HOST: ""

      BIFROST_CHAINS_BASE_DISABLED: "true"
      BIFROST_CHAINS_BASE_RPC_HOST: ""

      BIFROST_CHAINS_BTC_DISABLED: "true"
      BIFROST_CHAINS_BTC_RPC_HOST: ""

      BIFROST_CHAINS_DOGE_DISABLED: "true"
      BIFROST_CHAINS_DOGE_RPC_HOST: ""

      BIFROST_CHAINS_BCH_DISABLED: "true"
      BIFROST_CHAINS_BCH_RPC_HOST: ""

      BIFROST_CHAINS_LTC_DISABLED: "true"
      BIFROST_CHAINS_LTC_RPC_HOST: ""

      BIFROST_CHAINS_ETH_DISABLED: "false"
      BIFROST_CHAINS_ETH_RPC_HOST: http://ethereum:8545

      # Stellar (XLM) - ENABLED
      BIFROST_CHAINS_XLM_DISABLED: "false"
      BIFROST_CHAINS_XLM_RPC_HOST: http://stellar:8000


  ######################################################################################
  # Midgard
  ######################################################################################

  midgard:
    profiles:
      - midgard
    depends_on:
      midgard-db:
        condition: service_healthy
      switchlynode:
        condition: service_healthy
    build:
      context: https://github.com/SwitchlyProtocol/midgard.git
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      MIDGARD_SWITCHLY_NODE_URL: http://switchlynode:1317/switchly
      MIDGARD_SWITCHLY_TENDERMINT_URL: http://switchlynode:27147/websocket
      MIDGARD_TIMESCALE_HOST: midgard-db
      MIDGARD_SWITCHLY_LAST_CHAIN_BACKOFF: ${BLOCK_TIME:-2s}
    ports:
      - 8080:8080
    logging: *logging

  midgard-db:
    profiles:
      - midgard
    image: timescale/timescaledb:2.13.0-pg15
    restart: unless-stopped
    environment:
      - POSTGRES_USER=midgard
      - POSTGRES_PASSWORD=password
    command: postgres -c 'max_connections=250'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U midgard"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging: *logging


  ######################################################################################
  # Events
  ######################################################################################

  events:
    restart: unless-stopped
    profiles:
      - stagenet
    build:
      context: ../..
      dockerfile: ./tools/events/Dockerfile
      args:
        TAG: stagenet
    environment:
      CONSOLE: 1
      ENDPOINTS_SWITCHLYNODE: http://switchlynode:1317
      ENDPOINTS_MIDGARD: http://midgard:8080
      NETWORK: stagenet
      SCAN_STOP: 0
      # output everything
      THRESHOLDS_USD_VALUE: 0
      THRESHOLDS_SWITCH_VALUE: 0
      THRESHOLDS_DELTA_USD_VALUE: 0
      THRESHOLDS_DELTA_PERCENT: 0

  ######################################################################################
  # Validator-1
  ######################################################################################

  validator-1-switchlynode: &validator-1-switchlynode
    <<: *switchlynode
    profiles:
      - validator-1
    depends_on:
      switchlynode:
        condition: service_healthy
    ports: []
    environment: &validator-1-switchlynode-environment
      <<: *switchlynode-environment
      PEER: switchlynode
      SEEDS: switchlynode
    volumes:
      - ./mnt:/mnt
      - validator-1-switchlynode:/root/.switchlynode
    entrypoint: /scripts/validator.sh

  validator-1-bifrost: &validator-1-bifrost
    <<: *genesis-bifrost
    profiles:
      - validator-1
    depends_on:
      - validator-1-switchlynode
    environment: &validator-1-bifrost-environment
      <<: *genesis-bifrost-environment
      PEER: genesis-bifrost
      CHAIN_API: validator-1-switchlynode:1317
      CHAIN_RPC: validator-1-switchlynode:27147
      BIFROST_SWITCHLYCHAIN_CHAIN_EBIFROST: validator-1-switchlynode:50051
    ports:
      - 5041:5040
      - 6041:6040
    volumes:
      - "../../build/scripts:/docker/scripts"
      - validator-1-bifrost:/var/data/bifrost
      - validator-1-switchlynode:/root/.switchlynode

  ######################################################################################
  # Validator-2
  ######################################################################################

  validator-2-switchlynode:
    <<: *validator-1-switchlynode
    profiles:
      - validator-2
    depends_on:
      switchlynode:
        condition: service_healthy
    ports: []
    environment:
      <<: *validator-1-switchlynode-environment
    volumes:
      - ./mnt:/mnt
      - validator-2-switchlynode:/root/.switchlynode

  validator-2-bifrost:
    <<: *validator-1-bifrost
    profiles:
      - validator-2
    depends_on:
      - validator-2-switchlynode
    environment:
      <<: *validator-1-bifrost-environment
      CHAIN_API: validator-2-switchlynode:1317
      CHAIN_RPC: validator-2-switchlynode:27147
      BIFROST_SWITCHLYCHAIN_CHAIN_EBIFROST: validator-2-switchlynode:50051
    ports:
      - 5042:5040
      - 6042:6040
    volumes:
      - "../../build/scripts:/docker/scripts"
      - validator-2-bifrost:/var/data/bifrost
      - validator-2-switchlynode:/root/.switchlynode

  ######################################################################################
  # Validator-3
  ######################################################################################

  validator-3-switchlynode:
    <<: *validator-1-switchlynode
    profiles:
      - validator-3   
    depends_on:
      switchlynode:
        condition: service_healthy
    ports: []
    environment:
      <<: *validator-1-switchlynode-environment
    volumes:
      - ./mnt:/mnt
      - validator-3-switchlynode:/root/.switchlynode

  validator-3-bifrost:
    <<: *validator-1-bifrost
    profiles:
      - validator-3
    depends_on:
      - validator-3-switchlynode
    environment:
      <<: *validator-1-bifrost-environment
      CHAIN_API: validator-3-switchlynode:1317
      CHAIN_RPC: validator-3-switchlynode:27147
      BIFROST_SWITCHLYCHAIN_CHAIN_EBIFROST: validator-3-switchlynode:50051
    ports:
      - 5043:5040
      - 6043:6040
    volumes:
      - "../../build/scripts:/docker/scripts"
      - validator-3-bifrost:/var/data/bifrost
      - validator-3-switchlynode:/root/.switchlynode

  ######################################################################################
  # Ethereum
  ######################################################################################
  ethereum:
    profiles:
      - stagenet
    image: ethereum/client-go:v1.15.11
    restart: unless-stopped
    environment:
      BLOCK_TIME: ${BLOCK_TIME:-5}
    ports:
      - 8545:8545
      - 30301:30301
      - 30303:30303
    command: >
      --sepolia
      --http --http.api eth,net,web3
      --http.addr 0.0.0.0
      --http.port 8545
      --http.corsdomain "*"
      --ws --ws.api eth,net,web3
      --ws.addr 0.0.0.0
      --ws.port 8546
      --authrpc.port 8551
      --datadir /sepolia-data

  ######################################################################################
  # Stellar
  ######################################################################################
  stellar:
    profiles:
      - stagenet
    image: stellar/quickstart:testing
    restart: unless-stopped
    command: --testnet
    environment:
      BLOCK_TIME: ${BLOCK_TIME:-5}
    ports:
      - 8000:8000
      - 11626:11626
      - 11625:11625
    volumes:
      - "../../build/scripts:/docker/scripts"