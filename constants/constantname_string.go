// Code generated by "stringer -type=ConstantName"; DO NOT EDIT.

package constants

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EmissionCurve-0]
	_ = x[MaxRuneSupply-1]
	_ = x[BlocksPerYear-2]
	_ = x[OutboundTransactionFee-3]
	_ = x[NativeTransactionFee-4]
	_ = x[PoolCycle-5]
	_ = x[MinRunePoolDepth-6]
	_ = x[MaxAvailablePools-7]
	_ = x[StagedPoolCost-8]
	_ = x[PendingLiquidityAgeLimit-9]
	_ = x[MinimumNodesForBFT-10]
	_ = x[DesiredValidatorSet-11]
	_ = x[AsgardSize-12]
	_ = x[DerivedDepthBasisPts-13]
	_ = x[DerivedMinDepth-14]
	_ = x[MaxAnchorSlip-15]
	_ = x[MaxAnchorBlocks-16]
	_ = x[DynamicMaxAnchorSlipBlocks-17]
	_ = x[DynamicMaxAnchorTarget-18]
	_ = x[DynamicMaxAnchorCalcInterval-19]
	_ = x[ChurnInterval-20]
	_ = x[ChurnRetryInterval-21]
	_ = x[MissingBlockChurnOut-22]
	_ = x[MaxMissingBlockChurnOut-23]
	_ = x[MaxTrackMissingBlock-24]
	_ = x[BadValidatorRedline-25]
	_ = x[LackOfObservationPenalty-26]
	_ = x[SigningTransactionPeriod-27]
	_ = x[DoubleSignMaxAge-28]
	_ = x[PauseBond-29]
	_ = x[PauseUnbond-30]
	_ = x[MinimumBondInRune-31]
	_ = x[FundMigrationInterval-32]
	_ = x[MaxOutboundAttempts-33]
	_ = x[SlashPenalty-34]
	_ = x[PauseOnSlashThreshold-35]
	_ = x[FailKeygenSlashPoints-36]
	_ = x[FailKeysignSlashPoints-37]
	_ = x[LiquidityLockUpBlocks-38]
	_ = x[ObserveSlashPoints-39]
	_ = x[DoubleBlockSignSlashPoints-40]
	_ = x[MissBlockSignSlashPoints-41]
	_ = x[ObservationDelayFlexibility-42]
	_ = x[JailTimeKeygen-43]
	_ = x[JailTimeKeysign-44]
	_ = x[NodePauseChainBlocks-45]
	_ = x[EnableDerivedAssets-46]
	_ = x[MinSwapsPerBlock-47]
	_ = x[MaxSwapsPerBlock-48]
	_ = x[EnableOrderBooks-49]
	_ = x[EnableAdvSwapQueue-50]
	_ = x[MaxSynthPerPoolDepth-51]
	_ = x[MaxSynthsForSaversYield-52]
	_ = x[VirtualMultSynths-53]
	_ = x[VirtualMultSynthsBasisPoints-54]
	_ = x[MinSlashPointsForBadValidator-55]
	_ = x[MaxBondProviders-56]
	_ = x[MinTxOutVolumeThreshold-57]
	_ = x[TxOutDelayRate-58]
	_ = x[TxOutDelayMax-59]
	_ = x[MaxTxOutOffset-60]
	_ = x[TNSRegisterFee-61]
	_ = x[TNSFeeOnSale-62]
	_ = x[TNSFeePerBlock-63]
	_ = x[StreamingSwapPause-64]
	_ = x[StreamingSwapMinBPFee-65]
	_ = x[StreamingSwapMaxLength-66]
	_ = x[StreamingSwapMaxLengthNative-67]
	_ = x[MinCR-68]
	_ = x[MaxCR-69]
	_ = x[LoanStreamingSwapsInterval-70]
	_ = x[PauseLoans-71]
	_ = x[LoanRepaymentMaturity-72]
	_ = x[LendingLever-73]
	_ = x[PermittedSolvencyGap-74]
	_ = x[NodeOperatorFee-75]
	_ = x[ValidatorMaxRewardRatio-76]
	_ = x[MaxNodeToChurnOutForLowVersion-77]
	_ = x[ChurnOutForLowVersionBlocks-78]
	_ = x[POLMaxNetworkDeposit-79]
	_ = x[POLMaxPoolMovement-80]
	_ = x[POLTargetSynthPerPoolDepth-81]
	_ = x[POLBuffer-82]
	_ = x[RagnarokProcessNumOfLPPerIteration-83]
	_ = x[SynthYieldBasisPoints-84]
	_ = x[SynthYieldCycle-85]
	_ = x[MinimumL1OutboundFeeUSD-86]
	_ = x[MinimumPoolLiquidityFee-87]
	_ = x[ChurnMigrateRounds-88]
	_ = x[AllowWideBlame-89]
	_ = x[MaxAffiliateFeeBasisPoints-90]
	_ = x[TargetOutboundFeeSurplusRune-91]
	_ = x[MaxOutboundFeeMultiplierBasisPoints-92]
	_ = x[MinOutboundFeeMultiplierBasisPoints-93]
	_ = x[NativeOutboundFeeUSD-94]
	_ = x[NativeTransactionFeeUSD-95]
	_ = x[TNSRegisterFeeUSD-96]
	_ = x[TNSFeePerBlockUSD-97]
	_ = x[EnableUSDFees-98]
	_ = x[PreferredAssetOutboundFeeMultiplier-99]
	_ = x[FeeUSDRoundSignificantDigits-100]
	_ = x[MigrationVaultSecurityBps-101]
	_ = x[CloutReset-102]
	_ = x[CloutLimit-103]
	_ = x[KeygenRetryInterval-104]
	_ = x[SaversStreamingSwapsInterval-105]
	_ = x[RescheduleCoalesceBlocks-106]
	_ = x[L1SlipMinBps-107]
	_ = x[SynthSlipMinBps-108]
	_ = x[TradeAccountsSlipMinBps-109]
	_ = x[DerivedSlipMinBps-110]
	_ = x[TradeAccountsEnabled-111]
	_ = x[TradeAccountsDepositEnabled-112]
	_ = x[SecuredAssetSlipMinBps-113]
	_ = x[EVMDisableContractWhitelist-114]
	_ = x[OperationalVotesMin-115]
	_ = x[RUNEPoolEnabled-116]
	_ = x[RUNEPoolDepositMaturityBlocks-117]
	_ = x[RUNEPoolMaxReserveBackstop-118]
	_ = x[SaversEjectInterval-119]
	_ = x[SystemIncomeBurnRateBps-120]
	_ = x[DevFundSystemIncomeBps-121]
	_ = x[DevFundAddress-122]
	_ = x[PendulumAssetsBasisPoints-123]
	_ = x[PendulumUseEffectiveSecurity-124]
	_ = x[PendulumUseVaultAssets-125]
	_ = x[TVLCapBasisPoints-126]
	_ = x[MultipleAffiliatesMaxCount-127]
	_ = x[BondSlashBan-128]
	_ = x[BankSendEnabled-129]
	_ = x[RUNEPoolHaltDeposit-130]
	_ = x[RUNEPoolHaltWithdraw-131]
	_ = x[MinRuneForTCYStakeDistribution-132]
	_ = x[MinTCYForTCYStakeDistribution-133]
	_ = x[TCYStakeSystemIncomeBps-134]
	_ = x[TCYClaimingSwapHalt-135]
	_ = x[TCYStakeDistributionHalt-136]
	_ = x[TCYStakingHalt-137]
	_ = x[TCYUnstakingHalt-138]
	_ = x[TCYClaimingHalt-139]
	_ = x[StellarMinAccountBalance-140]
	_ = x[StellarBaseFee-141]
	_ = x[StellarMaxMemoLength-142]
	_ = x[ArtificialRagnarokBlockHeight-143]
	_ = x[BondLockupPeriod-144]
	_ = x[BurnSynths-145]
	_ = x[DefaultPoolStatus-146]
	_ = x[ManualSwapsToSynthDisabled-147]
	_ = x[MaximumLiquidityRune-148]
	_ = x[MintSynths-149]
	_ = x[NumberOfNewNodesPerChurn-150]
	_ = x[SignerConcurrency-151]
	_ = x[StrictBondLiquidityRatio-152]
	_ = x[SwapOutDexAggregationDisabled-153]
}

const _ConstantName_name = "EmissionCurveMaxRuneSupplyBlocksPerYearOutboundTransactionFeeNativeTransactionFeePoolCycleMinRunePoolDepthMaxAvailablePoolsStagedPoolCostPendingLiquidityAgeLimitMinimumNodesForBFTDesiredValidatorSetAsgardSizeDerivedDepthBasisPtsDerivedMinDepthMaxAnchorSlipMaxAnchorBlocksDynamicMaxAnchorSlipBlocksDynamicMaxAnchorTargetDynamicMaxAnchorCalcIntervalChurnIntervalChurnRetryIntervalMissingBlockChurnOutMaxMissingBlockChurnOutMaxTrackMissingBlockBadValidatorRedlineLackOfObservationPenaltySigningTransactionPeriodDoubleSignMaxAgePauseBondPauseUnbondMinimumBondInRuneFundMigrationIntervalMaxOutboundAttemptsSlashPenaltyPauseOnSlashThresholdFailKeygenSlashPointsFailKeysignSlashPointsLiquidityLockUpBlocksObserveSlashPointsDoubleBlockSignSlashPointsMissBlockSignSlashPointsObservationDelayFlexibilityJailTimeKeygenJailTimeKeysignNodePauseChainBlocksEnableDerivedAssetsMinSwapsPerBlockMaxSwapsPerBlockEnableOrderBooksEnableAdvSwapQueueMaxSynthPerPoolDepthMaxSynthsForSaversYieldVirtualMultSynthsVirtualMultSynthsBasisPointsMinSlashPointsForBadValidatorMaxBondProvidersMinTxOutVolumeThresholdTxOutDelayRateTxOutDelayMaxMaxTxOutOffsetTNSRegisterFeeTNSFeeOnSaleTNSFeePerBlockStreamingSwapPauseStreamingSwapMinBPFeeStreamingSwapMaxLengthStreamingSwapMaxLengthNativeMinCRMaxCRLoanStreamingSwapsIntervalPauseLoansLoanRepaymentMaturityLendingLeverPermittedSolvencyGapNodeOperatorFeeValidatorMaxRewardRatioMaxNodeToChurnOutForLowVersionChurnOutForLowVersionBlocksPOLMaxNetworkDepositPOLMaxPoolMovementPOLTargetSynthPerPoolDepthPOLBufferRagnarokProcessNumOfLPPerIterationSynthYieldBasisPointsSynthYieldCycleMinimumL1OutboundFeeUSDMinimumPoolLiquidityFeeChurnMigrateRoundsAllowWideBlameMaxAffiliateFeeBasisPointsTargetOutboundFeeSurplusRuneMaxOutboundFeeMultiplierBasisPointsMinOutboundFeeMultiplierBasisPointsNativeOutboundFeeUSDNativeTransactionFeeUSDTNSRegisterFeeUSDTNSFeePerBlockUSDEnableUSDFeesPreferredAssetOutboundFeeMultiplierFeeUSDRoundSignificantDigitsMigrationVaultSecurityBpsCloutResetCloutLimitKeygenRetryIntervalSaversStreamingSwapsIntervalRescheduleCoalesceBlocksL1SlipMinBpsSynthSlipMinBpsTradeAccountsSlipMinBpsDerivedSlipMinBpsTradeAccountsEnabledTradeAccountsDepositEnabledSecuredAssetSlipMinBpsEVMDisableContractWhitelistOperationalVotesMinRUNEPoolEnabledRUNEPoolDepositMaturityBlocksRUNEPoolMaxReserveBackstopSaversEjectIntervalSystemIncomeBurnRateBpsDevFundSystemIncomeBpsDevFundAddressPendulumAssetsBasisPointsPendulumUseEffectiveSecurityPendulumUseVaultAssetsTVLCapBasisPointsMultipleAffiliatesMaxCountBondSlashBanBankSendEnabledRUNEPoolHaltDepositRUNEPoolHaltWithdrawMinRuneForTCYStakeDistributionMinTCYForTCYStakeDistributionTCYStakeSystemIncomeBpsTCYClaimingSwapHaltTCYStakeDistributionHaltTCYStakingHaltTCYUnstakingHaltTCYClaimingHaltStellarMinAccountBalanceStellarBaseFeeStellarMaxMemoLengthArtificialRagnarokBlockHeightBondLockupPeriodBurnSynthsDefaultPoolStatusManualSwapsToSynthDisabledMaximumLiquidityRuneMintSynthsNumberOfNewNodesPerChurnSignerConcurrencyStrictBondLiquidityRatioSwapOutDexAggregationDisabled"

var _ConstantName_index = [...]uint16{0, 13, 26, 39, 61, 81, 90, 106, 123, 137, 161, 179, 198, 208, 228, 243, 256, 271, 297, 319, 347, 360, 378, 398, 421, 441, 460, 484, 508, 524, 533, 544, 561, 582, 601, 613, 634, 655, 677, 698, 716, 742, 766, 793, 807, 822, 842, 861, 877, 893, 909, 927, 947, 970, 987, 1015, 1044, 1060, 1083, 1097, 1110, 1124, 1138, 1150, 1164, 1182, 1203, 1225, 1253, 1258, 1263, 1289, 1299, 1320, 1332, 1352, 1367, 1390, 1420, 1447, 1467, 1485, 1511, 1520, 1554, 1575, 1590, 1613, 1636, 1654, 1668, 1694, 1722, 1757, 1792, 1812, 1835, 1852, 1869, 1882, 1917, 1945, 1970, 1980, 1990, 2009, 2037, 2061, 2073, 2088, 2111, 2128, 2148, 2175, 2197, 2224, 2243, 2258, 2287, 2313, 2332, 2355, 2377, 2391, 2416, 2444, 2466, 2483, 2509, 2521, 2536, 2555, 2575, 2605, 2634, 2657, 2676, 2700, 2714, 2730, 2745, 2769, 2783, 2803, 2831, 2847, 2857, 2874, 2900, 2920, 2930, 2954, 2971, 2995, 3024}

func (i ConstantName) String() string {
	if i < 0 || i >= ConstantName(len(_ConstantName_index)-1) {
		return "ConstantName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConstantName_name[_ConstantName_index[i]:_ConstantName_index[i+1]]
}
