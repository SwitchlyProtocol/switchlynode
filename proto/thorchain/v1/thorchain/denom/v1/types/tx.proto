syntax = "proto3";
package thorchain.denom.v1;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/bank/v1beta1/bank.proto";

option go_package = "gitlab.com/thorchain/thornode/v3/x/denom/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateDenom(MsgCreateDenom) returns (MsgCreateDenomResponse);
  rpc MintTokens(MsgMintTokens) returns (MsgMintTokensResponse);
  rpc BurnTokens(MsgBurnTokens) returns (MsgBurnTokensResponse);
  rpc ChangeDenomAdmin(MsgChangeDenomAdmin) returns (MsgChangeDenomAdminResponse);
}

// MsgCreateDenom is the sdk.Msg type for allowing an account to create
// a new denom.  It requires a sender address and a unique ID
// (to allow accounts to create multiple denoms)
message MsgCreateDenom {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  string id = 2 [ (gogoproto.moretags) = "yaml:\"id\"" ];
  cosmos.bank.v1beta1.Metadata metadata = 3 [ (gogoproto.nullable) = false ];
}

// MsgCreateDenomResponse is the return value of MsgCreateDenom
// It returns the full string of the newly created denom
message MsgCreateDenomResponse {
  string new_token_denom = 1
      [ (gogoproto.moretags) = "yaml:\"new_token_denom\"" ];
}

// MsgMint is the sdk.Msg type for allowing an admin account to mint
// more of a token. 
message MsgMintTokens {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
  string recipient = 3 [ (gogoproto.moretags) = "yaml:\"recipient\"" ];
}

message MsgMintTokensResponse {}

// MsgBurn is the sdk.Msg type for allowing an admin account to burn
// a token.  For now, we only support burning from the sender account.
message MsgBurnTokens {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
}

message MsgBurnTokensResponse {}

// MsgChangeDenomAdmin is the sdk.Msg type for allowing an admin account to reassign
// adminship of a denom to a new account
message MsgChangeDenomAdmin {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  string denom = 2 [ (gogoproto.moretags) = "yaml:\"denom\"" ];
  string newAdmin = 3 [ (gogoproto.moretags) = "yaml:\"new_admin\"" ];
}

message MsgChangeDenomAdminResponse {}

