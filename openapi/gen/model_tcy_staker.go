/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TCYStaker struct for TCYStaker
type TCYStaker struct {
	Address *string `json:"address,omitempty"`
	Amount string `json:"amount"`
}

// NewTCYStaker instantiates a new TCYStaker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTCYStaker(amount string) *TCYStaker {
	this := TCYStaker{}
	this.Amount = amount
	return &this
}

// NewTCYStakerWithDefaults instantiates a new TCYStaker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTCYStakerWithDefaults() *TCYStaker {
	this := TCYStaker{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TCYStaker) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TCYStaker) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TCYStaker) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TCYStaker) SetAddress(v string) {
	o.Address = &v
}

// GetAmount returns the Amount field value
func (o *TCYStaker) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TCYStaker) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TCYStaker) SetAmount(v string) {
	o.Amount = v
}

func (o TCYStaker) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableTCYStaker struct {
	value *TCYStaker
	isSet bool
}

func (v NullableTCYStaker) Get() *TCYStaker {
	return v.value
}

func (v *NullableTCYStaker) Set(val *TCYStaker) {
	v.value = val
	v.isSet = true
}

func (v NullableTCYStaker) IsSet() bool {
	return v.isSet
}

func (v *NullableTCYStaker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTCYStaker(val *TCYStaker) *NullableTCYStaker {
	return &NullableTCYStaker{value: val, isSet: true}
}

func (v NullableTCYStaker) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTCYStaker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


