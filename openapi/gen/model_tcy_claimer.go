/*
Switchlynode API

Switchlynode REST API.

Contact: devs@switchly.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SWCYClaimer struct for SWCYClaimer
type SWCYClaimer struct {
	L1Address *string `json:"l1_address,omitempty"`
	Amount string `json:"amount"`
	Asset string `json:"asset"`
}

// NewSWCYClaimer instantiates a new SWCYClaimer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSWCYClaimer(amount string, asset string) *SWCYClaimer {
	this := SWCYClaimer{}
	this.Amount = amount
	this.Asset = asset
	return &this
}

// NewSWCYClaimerWithDefaults instantiates a new SWCYClaimer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSWCYClaimerWithDefaults() *SWCYClaimer {
	this := SWCYClaimer{}
	return &this
}

// GetL1Address returns the L1Address field value if set, zero value otherwise.
func (o *SWCYClaimer) GetL1Address() string {
	if o == nil || o.L1Address == nil {
		var ret string
		return ret
	}
	return *o.L1Address
}

// GetL1AddressOk returns a tuple with the L1Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SWCYClaimer) GetL1AddressOk() (*string, bool) {
	if o == nil || o.L1Address == nil {
		return nil, false
	}
	return o.L1Address, true
}

// HasL1Address returns a boolean if a field has been set.
func (o *SWCYClaimer) HasL1Address() bool {
	if o != nil && o.L1Address != nil {
		return true
	}

	return false
}

// SetL1Address gets a reference to the given string and assigns it to the L1Address field.
func (o *SWCYClaimer) SetL1Address(v string) {
	o.L1Address = &v
}

// GetAmount returns the Amount field value
func (o *SWCYClaimer) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *SWCYClaimer) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *SWCYClaimer) SetAmount(v string) {
	o.Amount = v
}

// GetAsset returns the Asset field value
func (o *SWCYClaimer) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *SWCYClaimer) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *SWCYClaimer) SetAsset(v string) {
	o.Asset = v
}

func (o SWCYClaimer) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.L1Address != nil {
		toSerialize["l1_address"] = o.L1Address
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["asset"] = o.Asset
	}
	return json.Marshal(toSerialize)
}

type NullableSWCYClaimer struct {
	value *SWCYClaimer
	isSet bool
}

func (v NullableSWCYClaimer) Get() *SWCYClaimer {
	return v.value
}

func (v *NullableSWCYClaimer) Set(val *SWCYClaimer) {
	v.value = val
	v.isSet = true
}

func (v NullableSWCYClaimer) IsSet() bool {
	return v.isSet
}

func (v *NullableSWCYClaimer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSWCYClaimer(val *SWCYClaimer) *NullableSWCYClaimer {
	return &NullableSWCYClaimer{value: val, isSet: true}
}

func (v NullableSWCYClaimer) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSWCYClaimer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


