/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountResponseResult struct for AccountResponseResult
type AccountResponseResult struct {
	Value *Account `json:"value,omitempty"`
}

// NewAccountResponseResult instantiates a new AccountResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountResponseResult() *AccountResponseResult {
	this := AccountResponseResult{}
	return &this
}

// NewAccountResponseResultWithDefaults instantiates a new AccountResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountResponseResultWithDefaults() *AccountResponseResult {
	this := AccountResponseResult{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AccountResponseResult) GetValue() Account {
	if o == nil || o.Value == nil {
		var ret Account
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponseResult) GetValueOk() (*Account, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AccountResponseResult) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given Account and assigns it to the Value field.
func (o *AccountResponseResult) SetValue(v Account) {
	o.Value = &v
}

func (o AccountResponseResult) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAccountResponseResult struct {
	value *AccountResponseResult
	isSet bool
}

func (v NullableAccountResponseResult) Get() *AccountResponseResult {
	return v.value
}

func (v *NullableAccountResponseResult) Set(val *AccountResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountResponseResult(val *AccountResponseResult) *NullableAccountResponseResult {
	return &NullableAccountResponseResult{value: val, isSet: true}
}

func (v NullableAccountResponseResult) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


