/*
Switchlynode API

Switchlynode REST API.

Contact: devs@switchly.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkResponse struct for NetworkResponse
type NetworkResponse struct {
	// total amount of SWITCH awarded to node operators
	BondRewardSwitch string `json:"bond_reward_switch"`
	// total bonded SWITCH
	TotalBondUnits string `json:"total_bond_units"`
	// SWITCH in Available pools (equal in value to the Assets in those pools)
	AvailablePoolsSwitch string `json:"available_pools_switch"`
	// SWITCH value of Layer 1 Assets in vaults
	VaultsLiquiditySwitch string `json:"vaults_liquidity_switch"`
	// effective security bond used to determine maximum pooled SWITCH
	EffectiveSecurityBond string `json:"effective_security_bond"`
	// total reserve SWITCH
	TotalReserve string `json:"total_reserve"`
	// Returns true if there exist RetiringVaults which have not finished migrating funds to new ActiveVaults
	VaultsMigrating bool `json:"vaults_migrating"`
	// Sum of the gas the network has spent to send outbounds
	GasSpentSwitch string `json:"gas_spent_switch"`
	// Sum of the gas withheld from users to cover outbound gas
	GasWithheldSwitch string `json:"gas_withheld_switch"`
	// Current outbound fee multiplier, in basis points
	OutboundFeeMultiplier *string `json:"outbound_fee_multiplier,omitempty"`
	// the outbound transaction fee in switch, converted from the NativeOutboundFeeUSD mimir (after USD fees are enabled)
	NativeOutboundFeeSwitch string `json:"native_outbound_fee_switch"`
	// the native transaction fee in switch, converted from the NativeTransactionFeeUSD mimir (after USD fees are enabled)
	NativeTxFeeSwitch string `json:"native_tx_fee_switch"`
	// the switchlyname register fee in switch, converted from the TNSRegisterFeeUSD mimir (after USD fees are enabled)
	SwitchlynameRegisterFeeSwitch string `json:"switchlyname_register_fee_switch"`
	// the switchlyname fee per block in switch, converted from the TNSFeePerBlockUSD mimir (after USD fees are enabled)
	SwitchlynameFeePerBlockSwitch string `json:"switchlyname_fee_per_block_switch"`
	// the switch price in tor
	SwitchPriceInSwitchly string `json:"switch_price_in_tor"`
	// the tor price in switch
	SwitchlyPriceInSwitch string `json:"tor_price_in_switch"`
	// indicates if all anchor chains are halted (true), or at least one anchor chain is available (false)
	SwitchlyPriceHalted bool `json:"tor_price_halted"`
}

// NewNetworkResponse instantiates a new NetworkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkResponse(bondRewardSwitch string, totalBondUnits string, availablePoolsSwitch string, vaultsLiquiditySwitch string, effectiveSecurityBond string, totalReserve string, vaultsMigrating bool, gasSpentSwitch string, gasWithheldSwitch string, nativeOutboundFeeSwitch string, nativeTxFeeSwitch string, switchlynameRegisterFeeSwitch string, switchlynameFeePerBlockSwitch string, switchPriceInSwitchly string, torPriceInSwitch string, torPriceHalted bool) *NetworkResponse {
	this := NetworkResponse{}
	this.BondRewardSwitch = bondRewardSwitch
	this.TotalBondUnits = totalBondUnits
	this.AvailablePoolsSwitch = availablePoolsSwitch
	this.VaultsLiquiditySwitch = vaultsLiquiditySwitch
	this.EffectiveSecurityBond = effectiveSecurityBond
	this.TotalReserve = totalReserve
	this.VaultsMigrating = vaultsMigrating
	this.GasSpentSwitch = gasSpentSwitch
	this.GasWithheldSwitch = gasWithheldSwitch
	this.NativeOutboundFeeSwitch = nativeOutboundFeeSwitch
	this.NativeTxFeeSwitch = nativeTxFeeSwitch
	this.SwitchlynameRegisterFeeSwitch = switchlynameRegisterFeeSwitch
	this.SwitchlynameFeePerBlockSwitch = switchlynameFeePerBlockSwitch
	this.SwitchPriceInSwitchly = switchPriceInSwitchly
	this.SwitchlyPriceInSwitch = torPriceInSwitch
	this.SwitchlyPriceHalted = torPriceHalted
	return &this
}

// NewNetworkResponseWithDefaults instantiates a new NetworkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkResponseWithDefaults() *NetworkResponse {
	this := NetworkResponse{}
	return &this
}

// GetBondRewardSwitch returns the BondRewardSwitch field value
func (o *NetworkResponse) GetBondRewardSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BondRewardSwitch
}

// GetBondRewardSwitchOk returns a tuple with the BondRewardSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetBondRewardSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BondRewardSwitch, true
}

// SetBondRewardSwitch sets field value
func (o *NetworkResponse) SetBondRewardSwitch(v string) {
	o.BondRewardSwitch = v
}

// GetTotalBondUnits returns the TotalBondUnits field value
func (o *NetworkResponse) GetTotalBondUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalBondUnits
}

// GetTotalBondUnitsOk returns a tuple with the TotalBondUnits field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetTotalBondUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalBondUnits, true
}

// SetTotalBondUnits sets field value
func (o *NetworkResponse) SetTotalBondUnits(v string) {
	o.TotalBondUnits = v
}

// GetAvailablePoolsSwitch returns the AvailablePoolsSwitch field value
func (o *NetworkResponse) GetAvailablePoolsSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvailablePoolsSwitch
}

// GetAvailablePoolsSwitchOk returns a tuple with the AvailablePoolsSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetAvailablePoolsSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailablePoolsSwitch, true
}

// SetAvailablePoolsSwitch sets field value
func (o *NetworkResponse) SetAvailablePoolsSwitch(v string) {
	o.AvailablePoolsSwitch = v
}

// GetVaultsLiquiditySwitch returns the VaultsLiquiditySwitch field value
func (o *NetworkResponse) GetVaultsLiquiditySwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultsLiquiditySwitch
}

// GetVaultsLiquiditySwitchOk returns a tuple with the VaultsLiquiditySwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetVaultsLiquiditySwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultsLiquiditySwitch, true
}

// SetVaultsLiquiditySwitch sets field value
func (o *NetworkResponse) SetVaultsLiquiditySwitch(v string) {
	o.VaultsLiquiditySwitch = v
}

// GetEffectiveSecurityBond returns the EffectiveSecurityBond field value
func (o *NetworkResponse) GetEffectiveSecurityBond() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EffectiveSecurityBond
}

// GetEffectiveSecurityBondOk returns a tuple with the EffectiveSecurityBond field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetEffectiveSecurityBondOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectiveSecurityBond, true
}

// SetEffectiveSecurityBond sets field value
func (o *NetworkResponse) SetEffectiveSecurityBond(v string) {
	o.EffectiveSecurityBond = v
}

// GetTotalReserve returns the TotalReserve field value
func (o *NetworkResponse) GetTotalReserve() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalReserve
}

// GetTotalReserveOk returns a tuple with the TotalReserve field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetTotalReserveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalReserve, true
}

// SetTotalReserve sets field value
func (o *NetworkResponse) SetTotalReserve(v string) {
	o.TotalReserve = v
}

// GetVaultsMigrating returns the VaultsMigrating field value
func (o *NetworkResponse) GetVaultsMigrating() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.VaultsMigrating
}

// GetVaultsMigratingOk returns a tuple with the VaultsMigrating field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetVaultsMigratingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultsMigrating, true
}

// SetVaultsMigrating sets field value
func (o *NetworkResponse) SetVaultsMigrating(v bool) {
	o.VaultsMigrating = v
}

// GetGasSpentSwitch returns the GasSpentSwitch field value
func (o *NetworkResponse) GetGasSpentSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasSpentSwitch
}

// GetGasSpentSwitchOk returns a tuple with the GasSpentSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetGasSpentSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasSpentSwitch, true
}

// SetGasSpentSwitch sets field value
func (o *NetworkResponse) SetGasSpentSwitch(v string) {
	o.GasSpentSwitch = v
}

// GetGasWithheldSwitch returns the GasWithheldSwitch field value
func (o *NetworkResponse) GetGasWithheldSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasWithheldSwitch
}

// GetGasWithheldSwitchOk returns a tuple with the GasWithheldSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetGasWithheldSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasWithheldSwitch, true
}

// SetGasWithheldSwitch sets field value
func (o *NetworkResponse) SetGasWithheldSwitch(v string) {
	o.GasWithheldSwitch = v
}

// GetOutboundFeeMultiplier returns the OutboundFeeMultiplier field value if set, zero value otherwise.
func (o *NetworkResponse) GetOutboundFeeMultiplier() string {
	if o == nil || o.OutboundFeeMultiplier == nil {
		var ret string
		return ret
	}
	return *o.OutboundFeeMultiplier
}

// GetOutboundFeeMultiplierOk returns a tuple with the OutboundFeeMultiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetOutboundFeeMultiplierOk() (*string, bool) {
	if o == nil || o.OutboundFeeMultiplier == nil {
		return nil, false
	}
	return o.OutboundFeeMultiplier, true
}

// HasOutboundFeeMultiplier returns a boolean if a field has been set.
func (o *NetworkResponse) HasOutboundFeeMultiplier() bool {
	if o != nil && o.OutboundFeeMultiplier != nil {
		return true
	}

	return false
}

// SetOutboundFeeMultiplier gets a reference to the given string and assigns it to the OutboundFeeMultiplier field.
func (o *NetworkResponse) SetOutboundFeeMultiplier(v string) {
	o.OutboundFeeMultiplier = &v
}

// GetNativeOutboundFeeSwitch returns the NativeOutboundFeeSwitch field value
func (o *NetworkResponse) GetNativeOutboundFeeSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NativeOutboundFeeSwitch
}

// GetNativeOutboundFeeSwitchOk returns a tuple with the NativeOutboundFeeSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetNativeOutboundFeeSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NativeOutboundFeeSwitch, true
}

// SetNativeOutboundFeeSwitch sets field value
func (o *NetworkResponse) SetNativeOutboundFeeSwitch(v string) {
	o.NativeOutboundFeeSwitch = v
}

// GetNativeTxFeeSwitch returns the NativeTxFeeSwitch field value
func (o *NetworkResponse) GetNativeTxFeeSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NativeTxFeeSwitch
}

// GetNativeTxFeeSwitchOk returns a tuple with the NativeTxFeeSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetNativeTxFeeSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NativeTxFeeSwitch, true
}

// SetNativeTxFeeSwitch sets field value
func (o *NetworkResponse) SetNativeTxFeeSwitch(v string) {
	o.NativeTxFeeSwitch = v
}

// GetSwitchlynameRegisterFeeSwitch returns the SwitchlynameRegisterFeeSwitch field value
func (o *NetworkResponse) GetSwitchlynameRegisterFeeSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwitchlynameRegisterFeeSwitch
}

// GetSwitchlynameRegisterFeeSwitchOk returns a tuple with the SwitchlynameRegisterFeeSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetSwitchlynameRegisterFeeSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwitchlynameRegisterFeeSwitch, true
}

// SetSwitchlynameRegisterFeeSwitch sets field value
func (o *NetworkResponse) SetSwitchlynameRegisterFeeSwitch(v string) {
	o.SwitchlynameRegisterFeeSwitch = v
}

// GetSwitchlynameFeePerBlockSwitch returns the SwitchlynameFeePerBlockSwitch field value
func (o *NetworkResponse) GetSwitchlynameFeePerBlockSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwitchlynameFeePerBlockSwitch
}

// GetSwitchlynameFeePerBlockSwitchOk returns a tuple with the SwitchlynameFeePerBlockSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetSwitchlynameFeePerBlockSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwitchlynameFeePerBlockSwitch, true
}

// SetSwitchlynameFeePerBlockSwitch sets field value
func (o *NetworkResponse) SetSwitchlynameFeePerBlockSwitch(v string) {
	o.SwitchlynameFeePerBlockSwitch = v
}

// GetSwitchPriceInSwitchly returns the SwitchPriceInSwitchly field value
func (o *NetworkResponse) GetSwitchPriceInSwitchly() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwitchPriceInSwitchly
}

// GetSwitchPriceInSwitchlyOk returns a tuple with the SwitchPriceInSwitchly field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetSwitchPriceInSwitchlyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwitchPriceInSwitchly, true
}

// SetSwitchPriceInSwitchly sets field value
func (o *NetworkResponse) SetSwitchPriceInSwitchly(v string) {
	o.SwitchPriceInSwitchly = v
}

// GetSwitchlyPriceInSwitch returns the SwitchlyPriceInSwitch field value
func (o *NetworkResponse) GetSwitchlyPriceInSwitch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwitchlyPriceInSwitch
}

// GetSwitchlyPriceInSwitchOk returns a tuple with the SwitchlyPriceInSwitch field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetSwitchlyPriceInSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwitchlyPriceInSwitch, true
}

// SetSwitchlyPriceInSwitch sets field value
func (o *NetworkResponse) SetSwitchlyPriceInSwitch(v string) {
	o.SwitchlyPriceInSwitch = v
}

// GetSwitchlyPriceHalted returns the SwitchlyPriceHalted field value
func (o *NetworkResponse) GetSwitchlyPriceHalted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SwitchlyPriceHalted
}

// GetSwitchlyPriceHaltedOk returns a tuple with the SwitchlyPriceHalted field value
// and a boolean to check if the value has been set.
func (o *NetworkResponse) GetSwitchlyPriceHaltedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwitchlyPriceHalted, true
}

// SetSwitchlyPriceHalted sets field value
func (o *NetworkResponse) SetSwitchlyPriceHalted(v bool) {
	o.SwitchlyPriceHalted = v
}

func (o NetworkResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bond_reward_switch"] = o.BondRewardSwitch
	}
	if true {
		toSerialize["total_bond_units"] = o.TotalBondUnits
	}
	if true {
		toSerialize["available_pools_switch"] = o.AvailablePoolsSwitch
	}
	if true {
		toSerialize["vaults_liquidity_switch"] = o.VaultsLiquiditySwitch
	}
	if true {
		toSerialize["effective_security_bond"] = o.EffectiveSecurityBond
	}
	if true {
		toSerialize["total_reserve"] = o.TotalReserve
	}
	if true {
		toSerialize["vaults_migrating"] = o.VaultsMigrating
	}
	if true {
		toSerialize["gas_spent_switch"] = o.GasSpentSwitch
	}
	if true {
		toSerialize["gas_withheld_switch"] = o.GasWithheldSwitch
	}
	if o.OutboundFeeMultiplier != nil {
		toSerialize["outbound_fee_multiplier"] = o.OutboundFeeMultiplier
	}
	if true {
		toSerialize["native_outbound_fee_switch"] = o.NativeOutboundFeeSwitch
	}
	if true {
		toSerialize["native_tx_fee_switch"] = o.NativeTxFeeSwitch
	}
	if true {
		toSerialize["switchlyname_register_fee_switch"] = o.SwitchlynameRegisterFeeSwitch
	}
	if true {
		toSerialize["switchlyname_fee_per_block_switch"] = o.SwitchlynameFeePerBlockSwitch
	}
	if true {
		toSerialize["switch_price_in_tor"] = o.SwitchPriceInSwitchly
	}
	if true {
		toSerialize["tor_price_in_switch"] = o.SwitchlyPriceInSwitch
	}
	if true {
		toSerialize["tor_price_halted"] = o.SwitchlyPriceHalted
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkResponse struct {
	value *NetworkResponse
	isSet bool
}

func (v NullableNetworkResponse) Get() *NetworkResponse {
	return v.value
}

func (v *NullableNetworkResponse) Set(val *NetworkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkResponse(val *NetworkResponse) *NullableNetworkResponse {
	return &NullableNetworkResponse{value: val, isSet: true}
}

func (v NullableNetworkResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


