/*
Switchlynode API

Switchlynode REST API.

Contact: devs@switchly.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LastBlock struct for LastBlock
type LastBlock struct {
	Chain string `json:"chain"`
	LastObservedIn int64 `json:"last_observed_in"`
	LastSignedOut int64 `json:"last_signed_out"`
	Switchly int64 `json:"switchly"`
}

// NewLastBlock instantiates a new LastBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastBlock(chain string, lastObservedIn int64, lastSignedOut int64, switchly int64) *LastBlock {
	this := LastBlock{}
	this.Chain = chain
	this.LastObservedIn = lastObservedIn
	this.LastSignedOut = lastSignedOut
	this.Switchly = switchly
	return &this
}

// NewLastBlockWithDefaults instantiates a new LastBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastBlockWithDefaults() *LastBlock {
	this := LastBlock{}
	return &this
}

// GetChain returns the Chain field value
func (o *LastBlock) GetChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *LastBlock) GetChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *LastBlock) SetChain(v string) {
	o.Chain = v
}

// GetLastObservedIn returns the LastObservedIn field value
func (o *LastBlock) GetLastObservedIn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastObservedIn
}

// GetLastObservedInOk returns a tuple with the LastObservedIn field value
// and a boolean to check if the value has been set.
func (o *LastBlock) GetLastObservedInOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastObservedIn, true
}

// SetLastObservedIn sets field value
func (o *LastBlock) SetLastObservedIn(v int64) {
	o.LastObservedIn = v
}

// GetLastSignedOut returns the LastSignedOut field value
func (o *LastBlock) GetLastSignedOut() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastSignedOut
}

// GetLastSignedOutOk returns a tuple with the LastSignedOut field value
// and a boolean to check if the value has been set.
func (o *LastBlock) GetLastSignedOutOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSignedOut, true
}

// SetLastSignedOut sets field value
func (o *LastBlock) SetLastSignedOut(v int64) {
	o.LastSignedOut = v
}

// GetSwitchly returns the Switchly field value
func (o *LastBlock) GetSwitchly() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Switchly
}

// GetSwitchlyOk returns a tuple with the Switchly field value
// and a boolean to check if the value has been set.
func (o *LastBlock) GetSwitchlyOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Switchly, true
}

// SetSwitchly sets field value
func (o *LastBlock) SetSwitchly(v int64) {
	o.Switchly = v
}

func (o LastBlock) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["chain"] = o.Chain
	}
	if true {
		toSerialize["last_observed_in"] = o.LastObservedIn
	}
	if true {
		toSerialize["last_signed_out"] = o.LastSignedOut
	}
	if true {
		toSerialize["switchly"] = o.Switchly
	}
	return json.Marshal(toSerialize)
}

type NullableLastBlock struct {
	value *LastBlock
	isSet bool
}

func (v NullableLastBlock) Get() *LastBlock {
	return v.value
}

func (v *NullableLastBlock) Set(val *LastBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableLastBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableLastBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastBlock(val *LastBlock) *NullableLastBlock {
	return &NullableLastBlock{value: val, isSet: true}
}

func (v NullableLastBlock) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


