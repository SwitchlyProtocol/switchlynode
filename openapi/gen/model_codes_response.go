/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CodesResponse struct for CodesResponse
type CodesResponse struct {
	Codes []Code `json:"codes,omitempty"`
}

// NewCodesResponse instantiates a new CodesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodesResponse() *CodesResponse {
	this := CodesResponse{}
	return &this
}

// NewCodesResponseWithDefaults instantiates a new CodesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodesResponseWithDefaults() *CodesResponse {
	this := CodesResponse{}
	return &this
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *CodesResponse) GetCodes() []Code {
	if o == nil || o.Codes == nil {
		var ret []Code
		return ret
	}
	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodesResponse) GetCodesOk() ([]Code, bool) {
	if o == nil || o.Codes == nil {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *CodesResponse) HasCodes() bool {
	if o != nil && o.Codes != nil {
		return true
	}

	return false
}

// SetCodes gets a reference to the given []Code and assigns it to the Codes field.
func (o *CodesResponse) SetCodes(v []Code) {
	o.Codes = v
}

func (o CodesResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Codes != nil {
		toSerialize["codes"] = o.Codes
	}
	return json.Marshal(toSerialize)
}

type NullableCodesResponse struct {
	value *CodesResponse
	isSet bool
}

func (v NullableCodesResponse) Get() *CodesResponse {
	return v.value
}

func (v *NullableCodesResponse) Set(val *CodesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCodesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCodesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodesResponse(val *CodesResponse) *NullableCodesResponse {
	return &NullableCodesResponse{value: val, isSet: true}
}

func (v NullableCodesResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


